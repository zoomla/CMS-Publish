@functions{
    public SelectListItem ToItem(string text, string value)
    {
        return new SelectListItem() { Text = text, Value = value };
    }
    public bool IsContain(string fields,string field)
    {
        return (("," + fields + ",").Contains("," + field + ","));
    }
}
@{ 
    var cfg = SiteConfig.UserConfig;


    Dictionary<string, SelectListItem> fields = new Dictionary<string, SelectListItem>();
    fields.Add("Permissions", ToItem(""+@Html.Raw(L.真实姓名)+"", "Permissions"));
    fields.Add("UserSex", ToItem(""+@Html.Raw(L.性别)+"", "UserSex"));
    fields.Add("Birthday", ToItem(""+@Html.Raw(L.出生日期)+"", "Birthday"));
    fields.Add("Address", ToItem(""+@Html.Raw(L.联系地址)+"", "Address"));
    fields.Add("ZipCode", ToItem(""+@Html.Raw(L.邮政编码)+"", "ZipCode"));
    fields.Add("Homepage", ToItem(""+@Html.Raw(L.个人主页)+"", "Homepage"));
    fields.Add("QQ", ToItem(""+@Html.Raw(L.QQ号码)+"", "QQ"));
    fields.Add("OfficePhone", ToItem(""+@Html.Raw(L.办公电话)+"", "OfficePhone"));
    fields.Add("HomePhone", ToItem(""+@Html.Raw(L.家庭电话)+"", "HomePhone"));
    fields.Add("Mobile", ToItem(""+@Html.Raw(L.手机号码)+"", "Mobile"));
    fields.Add("Fax", ToItem(""+@Html.Raw(L.传真号码)+"", "Fax"));
    fields.Add("IDCard", ToItem(""+@Html.Raw(L.身份证号码)+"", "IDCard"));
    fields.Add("salt", ToItem(""+@Html.Raw(L.用户头像)+"", "UserFace"));
    fields.Add("FaceWidth", ToItem(""+@Html.Raw(L.头像宽度)+"", "FaceWidth"));
    fields.Add("FaceHeight", ToItem(""+@Html.Raw(L.头像高度)+"", "FaceHeight"));
    fields.Add("Sign", ToItem(""+@Html.Raw(L.签名档)+"", "Sign"));
    fields.Add("Privacy", ToItem(""+@Html.Raw(L.隐私设定)+"", "Privacy"));
    fields.Add("Province", ToItem(""+@Html.Raw(L.省市县)+"", "Province"));
    fields.Add("ParentUser", ToItem(""+@Html.Raw(L.推荐人)+"", "ParentUser"));
    fields.Add("InvitCode", ToItem(""+@Html.Raw(L.邀请码)+"", "InvitCode"));
    DataTable uftable = new B_UserBaseField().Select_All();
    for (int c = 0; c < uftable.Rows.Count; c++)
    {
        string FieldName = uftable.Rows[c]["FieldName"].ToString();
        string FieldAlias = uftable.Rows[c]["FieldAlias"].ToString();
        fields.Add(FieldName, ToItem(FieldAlias, FieldName));
    }
    List<SelectListItem> fields_space = new  List<SelectListItem>();
    List<SelectListItem> fields_must = new  List<SelectListItem>();
    List<SelectListItem> fields_select = new  List<SelectListItem>();
    foreach (var item in fields)
    {
        //必填,选填,空闲
        if (IsContain(cfg.RegFieldsMustFill, item.Key))
        {
            fields_must.Add(fields[item.Key]);
        }
        else if (IsContain(cfg.RegFieldsSelectFill, item.Key))
        {
            fields_select.Add(fields[item.Key]);
        }
        else
        {
            fields_space.Add(fields[item.Key]);
        }
    }

    List<SelectListItem> fields_must2 = new List<SelectListItem>();
    foreach (string item in cfg.RegFieldsMustFill.Split(new char[] { ',' }))
    {
        foreach (SelectListItem listItem in fields_must)
        {
            if (item == listItem.Value) { fields_must2.Add(listItem); }
        }
    }
    fields_must = fields_must2;


    List<SelectListItem> fields_select2 = new List<SelectListItem>();
    foreach (string item in cfg.RegFieldsSelectFill.Split(new char[] { ',' }))
    {
        foreach (SelectListItem listItem in fields_select)
        {
            if (item == listItem.Value) { fields_select2.Add(listItem); }
        }
    }
    fields_select = fields_select2;

}
@section head{<title>@L.用户参数</title>}

@section content {
<style type="text/css">
#fields_td .card{width:300px;margin-right:10px;}
#fields_td select{height:260px;}
#fields_td .btns{margin-top:5px;text-align:center;}
</style>
@Call.SetBread(new Bread[] {
        new Bread("{admin}"),
        new Bread() {url=Context.Request.RawUrl(), text=L.会员参数配置,addon= "" }}
)
<div class="" style="margin-left:15px;margin-right:15px;">
<div class="sysRow">
    <ul class="nav nav-tabs">
        <li class="nav-item"><a class="nav-link active show" href="#Tabs0" data-bs-toggle="tab">@L.基本参数</a></li>
        <li class="nav-item"><a class="nav-link" href="#Tabs1" data-bs-toggle="tab">@L.积分设置</a></li>
        <li class="nav-item"><a class="nav-link" href="#Tabs4" data-bs-toggle="tab">@L.会员菜单</a></li>
        <li class="nav-item"><a class="nav-link" href="#Tabs6" data-bs-toggle="tab">@L.提现配置</a></li>
    </ul>
<form method="post" action="UserConfig_Submit">
<div class="tab-content col-12 table_box">
    <div class="tab-pane  col-12 table_box active table-responsive-md" id="Tabs0">
        <table class="table table-striped table-bordered sys_table">
            <tbody>
                <tr><td colspan="2" class="text-center">@L.注册参数↓</td></tr>
                <tr>
                    <th style="width:300px;"><strong>@L.是否开启会员注册</strong></th>
                    <td>
                        @*@Html.CheckBox("EnableUserReg", cfg.EnableUserReg, new { @class = "switchChk", value = "1"})*@
                        @MVCHelper.H_Radios("UserLoginAndReg","正常,禁止注册,关闭(登录与注册)".Split(','),"0,1,2".Split(','),cfg.UserLoginAndReg.ToString())
                    </td>
                </tr>
                <tr>
                    <th><strong>@L.新会员注册时用户名最少字符数</strong></th>
                    <td>
					<div class="input-group">
                        @Html.TextBox("UserNameLimit",cfg.UserNameLimit.ToString(),new {@class="form-control max20rem" })
						<span class="input-group-text">@L.个字符</span>
					</div>
                    </td>
                </tr>
                <tr>
                    <th><strong>@L.新会员注册时用户名最多字符数</strong></th>
                    <td>
						<div class="input-group">
                            @Html.TextBox("UserNameMax",cfg.UserNameMax.ToString(),new {@class="form-control max20rem" })
							<span class="input-group-text">@L.个字符</span>
						</div>
                    </td>
                </tr>
                <tr>
                    <th><strong>@L.禁止注册的用户名</strong></th>
                    <td>
                        @Html.TextArea("UserNameRegDisabled",cfg.UserNameRegDisabled,new {@class="form-control m50rem_50",rows=6 })
                        <div><small>@L.每个用户名请用“|”@L.符号分隔</small></div>
                    </td>
                </tr>
                <tr>
                    <th><strong>@L.会员注册协议</strong></th>
                    <td> @MVCHelper.H_Radios("Agreement", "云办公模式|倒计时式|选择勾选|常规注册|不显示".Split('|'), "4|3|2|1|0".Split('|'), cfg.Agreement.ToString()) </td>
                </tr>
                <tr>
                    <th><strong>@L.会员注册默认状态</strong></th>
                    <td> @MVCHelper.H_Radios("UserValidateType", "已验证|未验证".Split('|'), "0|1".Split('|'), (cfg.UserValidateType ?1:0).ToString())</td>
                </tr>
                @*<tr>
                    <th><strong>允许用户名注册规则</strong></th>
                    <td> @MVCHelper.H_Checks("RegRule", "不允许纯数字|不允许纯英文|不允许带有中文".Split('|'), "1|2|3".Split('|'),cfg.RegRule) </td>
                </tr>*@
                <tr>
                    <th><strong>@L.是否开启用户注册管理员验证</strong></th>
                    <td>@MVCHelper.H_Check("AdminCheckReg",cfg.AdminCheckReg,new {@class="switchChk",value="1"  })</td>
                </tr>
                <tr><th><strong>@L.问答是否必填</strong></th>
                <td>@MVCHelper.H_Check("Reg_AnswerMust",cfg.Reg_AnswerMust,new {@class="switchChk",value="1"  })</td>
                </tr>
                <tr><th><strong>@L.注册可选会员组</strong></th>
                <td>@MVCHelper.H_Check("Reg_SelGroup",cfg.Reg_SelGroup,new {@class="switchChk",value="1"  })</td></tr>
                <tr>
                    <th><strong>@L.注册时是否启用验证码功能<br />
                    </strong>@L.可一定程度上防暴力营销软件或注册机自动注册。 </th>
                    <td>
                        @MVCHelper.H_Check("EnableCheckCodeOfReg",cfg.EnableCheckCodeOfReg,new {@class="switchChk",value="1"  })
                    </td>
                </tr>
                <tr>
                    <th><strong>@L.是否开启用户ID登录</strong></th>
                    <td> @MVCHelper.H_Check("UserIDlgn",cfg.UserIDlgn,new {@class="switchChk",value="1"  })
                </tr>
                <tr>
                    <th><strong>@L.登录是否启用验证码功能<br />
                    </strong>@L.可一定程度上防止会员密码被暴力破解 </th>
                    <td>
                        @MVCHelper.H_Radios("EnableCheckCodeOfLogin_rad","失败三次后开启,开启验证码,不开启".Split(','),"0,1,2".Split(','),cfg.EnableCheckCodeOfLogin)
                    </td>
                </tr>
                <tr><td colspan="2" class="text-center">@L.手机邮箱↓</td></tr>
                <tr>
                    <th><strong>@L.手机校验码注册</strong></th>
                    <td>@MVCHelper.H_Check("MobileReg",cfg.MobileReg,new {@class="switchChk",value="1"  })</td>
                </tr>
                <tr>
                    <th><strong>@L.手机校验码位数</strong></th>
                    <td>
					<div class="input-group">
                        @Html.TextBox("MobileCodeNum",cfg.MobileCodeNum.ToString(),new {@class="form-control max20rem",maxlength=2 })
						<span class="input-group-text">@L.个字符</span>
					</div>
					<small class="text-muted">@L.最少必须4位</small>
                </tr>
                <tr>
                    <th><strong>@L.手机校验码规则</strong></th>
                    <td>
                         @MVCHelper.H_Radios("MobileCodeType","纯数字,纯字母,混合式".Split(','),"2,3,0".Split(','),cfg.MobileCodeType.ToString())
                    </td>
                </tr>
                <tr>
                    <th><strong>@L.是否开启注册Email验证</strong></th>
                    <td>@MVCHelper.H_Check("EmailCheckReg",cfg.EmailCheckReg,new {@class="switchChk",value="1"  })
                    </td>
                </tr>
                <tr>
                    <th><strong>@L.是否开启Email注册登录</strong></th>
                    <td>@MVCHelper.H_Check("EmailRegis",cfg.EmailRegis,new {@class="switchChk",value="1"  })

                    </td>
                </tr>
                <tr>
                    <th><strong>@L.是否开启注册成功邮件提醒</strong></th>
                    <td>
                        @MVCHelper.H_Check("EmailTell",cfg.EmailTell,new {@class="switchChk",value="1"  })
                    </td>
                </tr>
                <tr><th><strong>@L.Email是否必填</strong></th><td>
                     @MVCHelper.H_Check("Reg_EmailMust",cfg.Reg_EmailMust,new {@class="switchChk",value="1" })
                </td></tr>
                <tr><td colspan="2" class="text-center">@L.扩展参数↓</td></tr>
                <tr>
                    <th><strong>@L.注册时的项目</strong><br />
                        @L.设定注册选填项<br />
                        @L.添加内容选填项<br />
                        @L.项目必填项<br />
                        <span style="color: Blue">@L.注意事项</span></th>
                    <td style="display:flex;" id="fields_td">


                        <input type="hidden" ID="HdnRegFields_MustFill" name="HdnRegFields_MustFill" value="@cfg.RegFieldsMustFill" />
                        <input type="hidden" ID="HdnRegFields_SelectFill" name="HdnRegFields_SelectFill" value="@cfg.RegFieldsSelectFill" />
                        <div class="card card-info">
                            <div class="card-header">@L.可用项</div>
                            <div class="card-body">
                                @Html.ListBox("LitRegFields", new SelectList(fields_space, "Value", "Text"), new { style = "", @class = "form-control" })
                                <div class="btns">
                                    <input id="Button4" value="@L.添加至必填" class="btn btn-outline-secondary" onclick="AddFields_MustFill()" type="button" />
                                    <input id="Button3" value="@L.添加至选填" class="btn btn-outline-secondary" onclick="AddFields_SelectFill()" type="button" />
                                </div>
                            </div>
                        </div>
                          <div class="card card-info" >
                            <div class="card-header">@L.必填项</div>
                            <div class="card-body">
                                @Html.ListBox("LitRegFields_MustFill", new SelectList(fields_must, "Value", "Text"), new { style = "", @class = "form-control" })

                                <div class="btns">
                                    <button id="Button2" onclick="RemoveFields_MustFill()" class="btn btn-outline-secondary" type="button"><i class="zi zi_trash"></i></button>
                                    <button id="Button5" onclick="UpFields_MustFill()" class="btn btn-outline-secondary" type="button"  ><i class="zi zi_arrowUp"></i></button>
                                    <button id="Button6" onclick="DownFields_MustFill()" class="btn btn-outline-secondary" type="button"><i class="zi zi_arrowDown"></i></button>
                                </div>
                            </div>
                        </div>
                          <div class="card card-info">
                            <div class="card-header">@L.选填项</div>
                            <div class="card-body">
                                @Html.ListBox("LitRegFields_SelectFill", new SelectList(fields_select, "Value", "Text"), new { style = "", @class = "form-control" })

                                <div class="btns">
                                    <button id="Button7" onclick="RemoveFields_SelectFill()" class="btn btn-outline-secondary" type="button" ><i class="zi zi_trash"></i></button>
                                    <button id="Button8" onclick="UpFields_SelectFill()" class="btn btn-outline-secondary"  type="button" ><i class="zi zi_arrowUp"></i></button>
                                    <button id="Button9" onclick="DownFields_SelectFill()" class="btn btn-outline-secondary" type="button" ><i class="zi zi_arrowDown"></i></button>
                                </div>

                            </div>
                        </div>


                        

                    </td>
                </tr>
                <tr>
                    <th><strong>@L.新会员注册时发送的手机验证短信内容：<br />
                    </strong>@L.短信内容中可用标签范围<br />
                        <span>{$CheckNum}</span>：@L.会员名称<br />
                        <span>{$SiteName}</span>：@L.网站名称<br />
                        <span>{$SiteUrl}</span>：@L.网站地址</th>
                    <td>@Html.TextArea("MobileRegInfo",cfg.MobileRegInfo,new {@class="form-control m50rem_50",rows=6 })</td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="tab-pane table-responsive-md" id="Tabs1">
        <table class="table table-striped table-bordered myform-control sys_table">
                <tr runat="server" id="PresentExpPerLogin">
                    <th class="w12rem_lg"><strong>@L.会员每登录一次奖励的积分</strong><br>
					<small class="text-muted">@L.一天只计算一次 </small>
					</th>
                    <td>
						<div class="input-group">
                        @Html.TextBox("PresentExpPerLogin",cfg.PresentExpPerLogin,new {@class="form-control max20rem" })
							<span class="input-group-text">@L.积分 </span>
						</div>
					</td>
                </tr>
                <tr>
                    <th>@L.每次签到奖励</th>
                    <td>
					<div class="input-group">
                        @Html.TextBox("SigninPurse",cfg.SigninPurse,new {@class="form-control max20rem" })
						<span class="input-group-text">@L.资金</span>
					</div>
                    </td>
                </tr>
                <tr
                    runat="server" id="Tr1">
                    <th><strong>@L.发布一条新内容奖励积分</strong></th>
                    <td>
					<div class="input-group">
                         @Html.TextBox("InfoRule",cfg.InfoRule,new {@class="form-control max20rem" })
						<span class="input-group-text">@L.积分</span>
					</div></td>
                </tr>
                <tr
                    runat="server" id="Tr2">
                    <th><strong>@L.发布一条评论奖励积分</strong></th>
                    <td>
					<div class="input-group">
                         @Html.TextBox("CommentRule",cfg.CommentRule,new {@class="form-control max20rem" })
						<span class="input-group-text">@L.积分</span>
					</div></td>
                </tr>
                <tr
                    runat="server" id="Tr3">
                    <th><strong>@L.发布的内容被推荐奖励积分</strong></th>
                    <td>
					<div class="input-group">
                         @Html.TextBox("CommentRule",cfg.RecommandRule,new {@class="form-control max20rem" })
						<span class="input-group-text">积分</span>
					</div>
                    </td>
                </tr>
                <tr
                    runat="server" id="PresentExp">
                    <th><strong>@L.新会员注册时赠送的积分</strong></th>
                    <td>
					<div class="input-group">
                        @Html.TextBox("PresentExp",cfg.PresentExp,new {@class="form-control max20rem" })
						<span class="input-group-text">@L.积分</span>
					</div>
                    </td>
                </tr>
                <tr runat="server" id="PresentMoney">
                    <th><strong>@L.新会员注册时赠送的金钱</strong></th>
                    <td>
					<div class="input-group">
                         @Html.TextBox("PresentMoney",cfg.PresentMoney,new {@class="form-control max20rem" })
						<span class="input-group-text">@L.元</span>
					</div>
                    </td>
                </tr>
                <tr>
                    <th><strong>@L.创建群组所需要的积分</strong></th>
                    <td>
                            
					<div class="input-group">
                         @Html.TextBox("Integral",cfg.Integral,new {@class="form-control max20rem" })
						<span class="input-group-text">@L.积分</span>
					</div>
					</td>
                </tr>
        </table>
    </div>
    <div class="tab-pane table-responsive-md" id="Tabs4">
        <table class="table table-striped table-bordered myform-control sys_table">
                <tr><th class="text-end w12rem_lg"><strong>@L.会员中心主菜单</strong></th><td>
                    <label><input type="checkbox" name="UserNavBan" value="index"/>@L.首页</label>
                    <label><input type="checkbox" name="UserNavBan" value="content"/>@L.内容</label>
                    <label><input type="checkbox" name="UserNavBan" value="shop"/>@L.商城</label>
                    <label><input type="checkbox" name="UserNavBan" value="exam"/>@L.教育</label>
                    <label><input type="checkbox" name="UserNavBan" value="bbs"/>@L.社区</label>
                    <label><input type="checkbox" name="UserNavBan" value="page"/>@L.黄页</label>
                    <label><input type="checkbox" name="UserNavBan" value="cloud"/>@L.云盘</label>
                    @*<label><input type="checkbox" name="UserNavBan" value="site"/>建站</label>*@
                    <label><input type="checkbox" name="UserNavBan" value="office"/>@L.办公</label>
                    <label><input type="checkbox" name="UserNavBan" value="plat"/>@L.能力</label><br>
					<small class="text-muted" style="color:red;">*@L.勾选的导航会禁止显示</small>
                    <script>
                        $(function () {
                            SetChkVal("UserNavBan","@cfg.UserNavBan");
                        })
                    </script>
                </td></tr>
                <tr>
                    <th>会员初次访问跳转页面</th>
                    <td><div class="input-group-append">@Html.TextBox("UserReload", cfg.UserReload, new { @class = "form-control max20rem" })</div></td>
                </tr>
        </table>
    </div>
    <div class="tab-pane table-responsive-md" id="Tabs6">
        <table class="table table-bordered table-striped sys_table">
            <tr><th class="w12rem_lg text-end">@L.最小提现金额</th><td>
                 @Html.TextBox("WD_Min",cfg.WD_Min,new {@class="form-control max20rem" })
				<small class="text-muted">@L.单笔提现最小金额,@L.最小值为 1</small>
                                                        </td></tr>
            <tr><th class="text-end">@L.最大提现金额</th><td>
                 @Html.TextBox("WD_Max",cfg.WD_Max,new {@class="form-control max20rem" })
				<small class="text-muted">@L.单笔提现最大金额,0 @L.为不限制</small>
                                                    </td></tr>
            <tr>
                <th class="text-end">@L.提现倍数</th>
                <td>
                      @Html.TextBox("WD_Multi",cfg.WD_Multi,new {@class="form-control max20rem" })
					<small class="text-muted">@L.提现金额必须是该值的倍数,0 @L.为即不限制</small>
                </td>
            </tr>
            <tr><th class="text-end">@L.提现手续费率</th><td>
				<div class="input-group">
                    @Html.TextBox("WD_FeePrecent",cfg.WD_FeePrecent,new {@class="form-control max20rem" })
					<span class="input-group-text">%</span>
				</div>
			</td></tr>
        </table>
    </div>
</div>
<div class="Conent_fix"><input type="submit" value="@L.保存设置" class="btn btn-info" /></div>
</form>
</div>
</div>
}
@section script{ 
<script src="/JS/SelectCheckBox.js"></script>
<script src="/JS/ZL_Regex.js"></script>
<script src="/res/js/bootstrap-switch.js"></script>
<link type="text/css" href="/res/css/bootstrap-switch.min.css" rel="stylesheet" />
<script type="text/javascript">
    $(function () {
        ZL_Regex.B_Num(".int");
    })

    function checkIP() {
        var ip1 = document.getElementById("txtBeginIP").value;
        var ip2 = document.getElementById("txtEndIP").value;
        if (ip1 != "" || ip2 != "") {
            var re = /^((\d)|(([1-9])\d)|(1\d\d)|(2(([0-4]\d)|5([0-5]))))\.((\d)|(([1-9])\d)|(1\d\d)|(2(([0-4]\d)|5([0-5]))))\.((\d)|(([1-9])\d)|(1\d\d)|(2(([0-4]\d)|5([0-5]))))\.((\d)|(([1-9])\d)|(1\d\d)|(2(([0-4]\d)|5([0-5]))))$/;
            var message = document.getElementById("lblMessage");
            if (!re.test(ip1) || !re.test(ip2)) {
                alert("@Html.Raw(L.输入IP地址格式不正确))！")
                return;
            }
        }
    }
    window.onload = function PunchCha() {
        var obj = $('#selPunch').val();
        if (obj == "0") {
            document.getElementById("Tr7").style.display = "none";
        } else {
            document.getElementById("Tr7").style.display = "";
        }
        InitCountFiled();
    }
    var LitRegFieldsClientID = "LitRegFields";
    var HdnRegFields_MustFillClientID = "HdnRegFields_MustFill";
    var LitRegFields_MustFillClientID = "LitRegFields_MustFill";
    var HdnRegFields_SelectFillClientID = "HdnRegFields_SelectFill";
    var LitRegFields_SelectFillClientID = "LitRegFields_SelectFill";
    //初始化需要统计的用户字段
    function InitCountFiled() {
        //var hids = $("#CountFields_Hid").val();
        //if (hids != "") {
        //    var harr = hids.split(',');
        //    for (var i = 0; i < harr.length; i++) {
        //        $("#UserFields_list option[value='" + harr[i] + "']")[0].selected = true;
        //    }
        //    addItem($("#UserFields_list")[0], $("#CountFields_list")[0]);
        //}
    }
    function AddFields_CountFill() {
        //addItem($("#UserFields_list")[0], $("#CountFields_list")[0]);
        //SetHdn($("#CountFields_list")[0], $("#CountFields_Hid")[0]);
    }
    function RemoveFields_CountFill() {
        addItem($("#CountFields_list")[0], $("#UserFields_list")[0]);
        SetHdn($("#CountFields_list")[0], $("#CountFields_Hid")[0]);
    }
    function AddFields_MustFill() {
        var itemList = document.getElementById(LitRegFieldsClientID);
        var target = document.getElementById(LitRegFields_MustFillClientID);
        addItem(itemList, target);
        SetHdn(target, document.getElementById(HdnRegFields_MustFillClientID));
    }

    function RemoveFields_MustFill() {
        var itemList = document.getElementById(LitRegFieldsClientID);
        var target = document.getElementById(LitRegFields_MustFillClientID);
        addItem(target, itemList);
        SetHdn(target, document.getElementById(HdnRegFields_MustFillClientID));
    }

    function AddFields_SelectFill() {
        var itemList = document.getElementById(LitRegFieldsClientID);
        var target = document.getElementById(LitRegFields_SelectFillClientID);
        addItem(itemList, target);
        SetHdn(target, document.getElementById(HdnRegFields_SelectFillClientID));
    }

    function RemoveFields_SelectFill() {
        var itemList = document.getElementById(LitRegFieldsClientID);
        var target = document.getElementById(LitRegFields_SelectFillClientID);
        addItem(target, itemList);
        SetHdn(target, document.getElementById(HdnRegFields_SelectFillClientID));
    }

    function UpFields_MustFill() {
        var target = document.getElementById(LitRegFields_MustFillClientID);
        UpOption(target);
        SetHdn(target, document.getElementById(HdnRegFields_MustFillClientID));
    }

    function DownFields_MustFill() {
        var target = document.getElementById(LitRegFields_MustFillClientID);
        DownOption(target);
        SetHdn(target, document.getElementById(HdnRegFields_MustFillClientID));
    }

    function UpFields_SelectFill() {
        var target = document.getElementById(LitRegFields_SelectFillClientID);
        UpOption(target);
        SetHdn(target, document.getElementById(HdnRegFields_SelectFillClientID));
    }

    function DownFields_SelectFill() {
        var target = document.getElementById(LitRegFields_SelectFillClientID);
        DownOption(target);
        SetHdn(target, document.getElementById(HdnRegFields_SelectFillClientID));
    }

    function UpOption(obj) {
        for (var i = 0; i < obj.length; i++) {
            var opt = obj.options[i];
            if (opt.selected) {
                if (i >= 1) {
                    var temp = obj.options[i - 1];
                    obj.options[i] = new Option(temp.text, temp.value, 0, 0);
                    obj.options[i - 1] = new Option(opt.text, opt.value, 0, 1);
                }
            }
        }
    }

    function DownOption(obj) {
        for (var i = obj.length - 1; i >= 0; i--) {
            var opt = obj.options[i];
            if (opt.selected) {
                if (i <= obj.length - 2) {
                    var temp = obj.options[i + 1];
                    obj.options[i] = new Option(temp.text, temp.value, 0, 0);
                    obj.options[i + 1] = new Option(opt.text, opt.value, 0, 1);
                }
            }
        }
    }

    function addItem(ItemList, Target) {
        for (var i = 0; i < ItemList.length; i++) {
            var opt = ItemList.options[i];
            if (opt.selected) {
                flag = true;
                for (var y = 0; y < Target.length; y++) {
                    var myopt = Target.options[y];
                    if (myopt.value == opt.value) {
                        flag = false;
                    }
                }
                if (flag) {
                    Target.options[Target.options.length] = new Option(opt.text, opt.value, 0, 0);
                }
            }
        }

        for (var y = 0; y < Target.length; y++) {
            var myopt = Target.options[y];
            for (var i = 0; i < ItemList.length; i++) {
                if (ItemList.options[i].value == myopt.value) {
                    ItemList.options[i] = null;
                }
            }
        }
    }

    function SetHdn(ItemList, HdnObj) {
        var adminId = "";
        for (var i = 0; i < ItemList.length; i++) {
            if (adminId == "") {
                adminId = ItemList.options[i].value;
            }
            else {
                adminId += "," + ItemList.options[i].value;
            }
        }
        HdnObj.value = adminId;
    }
</script>
<script type="text/javascript" src="/js/Common.js"></script>
}
