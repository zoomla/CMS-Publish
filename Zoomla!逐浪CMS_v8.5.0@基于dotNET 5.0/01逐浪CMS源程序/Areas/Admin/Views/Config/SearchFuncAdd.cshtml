@model  ZoomLa.Model.M_Search
@{ 
    B_Group gpBll = new B_Group();
    DataTable groupDT = gpBll.Sel();
}
@section head{<title>设定导航</title>
<link type="text/css" href="/res/css/bootstrap-switch.min.css" rel="stylesheet" />}
@section content{ 

@Call.SetBread(new Bread[] {
		new Bread("{admin}"),
        new Bread("SearchFunc","管理导航"),
        new Bread() {url="", text="导航信息",addon="" }}
		)
<form method="post" action="@MVCHelper.GetAction("SearchFuncAdd_Submit",Context.Request)">
<div class="">
		<table class="table table-hover table-striped table-hover table-bordered sys_table">
			<tr>
				<th>功能名称</th>
                <td>
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control max20rem" })
                    <small class="text-muted">方便记忆的名称</small>
                </td>
			</tr>
            <tr>
                <th>
                    文件路径<span class="text-danger">*</span>
                </th>
                <td>
                    @Html.TextBoxFor(m => m.FlieUrl, new { @class = "form-control max20rem" })
                    <small class="text-muted">您可以直接填入系统内文件名,以便后台访问,如[/manage/Config/SiteInfo]为系统配置,或输入外部网址提交</small>
                </td>
            </tr>
			<tr>
				<th>图标地址</th>
                <td>
                    <div class="input-group mb-3">
                        <input type="text" ID="ItemIcon_T" name="ItemIcon_T" class="form-control border-secondary max20rem" value="@Model.Ico" />
                        <button type="button" class="btn btn-outline-secondary zi zi_image"><i class="" id="ItemIcon_T_icon"></i></button>
                        <input type="button" class="btn btn-outline-secondary" onclick="ShowComDiag('/lib/html/icon2.html', '选择图标');" value="选择图标" />
                    </div>

                </td>
			</tr>
			<tr>
				<th>打开方式</th>
				<td>
                    @MVCHelper.H_Radios("OpenType","原窗口打开|新窗口打开".Split('|'),"0|1".Split('|'),Model.OpenType.ToString())
				</td>
			</tr>
			<tr>
				<th>支持移动</th>
				<td>
                     @MVCHelper.H_Radios("Mobile","不支持|支持".Split('|'),"0|1".Split('|'),Model.Mobile.ToString())
				</td>
			</tr>
            @if (Model.Type == 1)
            {
           	    <tr>
				    <th>块大小</th>
				    <td>
                         @MVCHelper.H_Radios("Size", "小|中|大".Split('|'), "1|2|3".Split('|'), Model.Size.ToString())
				    </td>
			    </tr>
			    <tr>
				    <th>块颜色</th>
				    <td>
                        @Html.TextBoxFor(m => m.BKColor, new { @class = "form-control max20rem color_text" })
				    </td>
			    </tr>
            }
            else
            {
                <tr><th>所属会员组</th><td>
                    <div>
                        @foreach (DataRow dr in groupDT.Rows) {<label><input type="checkbox" name="UserGroup" value="@dr["GroupID"]"/>@dr["GroupName"]</label> }
                    </div>
                    <small>勾选后即仅指定的会员组可见,不勾选则全部用户可见</small>
                    @if (!string.IsNullOrEmpty(Model.UserGroup)) {<script>$(function () {SetChkVal("UserGroup","@Model.UserGroup") })</script> }
                    </td></tr>
                <tr><th>是否推荐</th><td>
                    <div>@MVCHelper.H_Check("EliteLevel",Model.EliteLevel==1,new {@class="switchChk",value="1" })</div>
                    <small>推荐的应用会在用户中心--主界面展示</small>
                    </td></tr>
            }
            <tr>
                <td></td>
                <td>
                    <input type="submit" value="保存信息" class="btn btn-info"/>
                    <a href="SearchFunc?type=@Model.Type" class="btn btn-outline-info">@L.返回列表</a>
                </td>
            </tr>
		</table>
    </div>
</form>
}
@section script{ 
<link href="/js/Plugs/color/bootstrap.colorpickersliders.min.css" rel="stylesheet" />
<script src="/res/js/bootstrap-switch.js"></script>
<script src="/js/Plugs/color/tinycolor-min.js"></script>
<script src="/js/Plugs/color/bootstrap.colorpickersliders.min.js"></script>
<script src="/js/SelectCheckBox.js"></script>
<script>   
$(function () {
	$("[name='linktype_ch']").change(function () {//显示用户组
		ShowUserGroup();
	});
	ShowUserGroup();
	//全选操作
	$("#usercheck_ch").click(function () {
		var obj = $(this);
		obj.closest('td').find('input').each(function (i,v) {
			$(v)[0].checked = obj[0].checked;
		});
	});
	$(".color_text").ColorPickerSliders({
		size: 'default', placement: 'bottom', color: $(this).val(), swatches: true, sliders: false, hsvpanel: true, previewformat: "hex",
		onchange: function (container, color) {
			var $input = $(this.connectedinput.context);
			var hex = color.tiny.toHexString()
			$input.val(hex);
		}
	});
})
function ShowUserGroup() {
	if ($("[name='linktype_ch']:checked").val() == "3")
		$(".user_hid_set").show();
	else
		$(".user_hid_set").hide();
}
function CheckUserType() {
	$("[name='linktype_ch'][value=3]")[0].checked = true;
}
//检查名字是否重复
function checkname() {
	if ($("#EditSearchName_Hid").val() != "" && $("#EditSearchName_Hid").val() == $("#txtName").val())
	{
		if(formflag)
		{ $("#EBtnSubmit").click(); }
		return;
	}
	$.post('AddSearch', { action: 'checkname', name: $("#txtName").val() }, function (data) {
		if (data == "-1") {
			$("#Edit_Btn").attr('disabled', 'disabled');
			$("#txtName_span").text('功能名重复!请重新修改功能名');
			formflag = false;
		}
		else {
			$("#txtName_span").text('');
			$("#Edit_Btn").removeAttr('disabled');
			if (formflag)
			{ $("#EBtnSubmit").click(); }
		}
	})
}
var formflag=false;//表单控制
function CheckSubmit() {
	formflag = true;
	checkname();
}
//----------------
var zlicon = { id: "" };
zlicon.back = function (icon) {
	if (!icon) { icon = $(zlicon.id).val(); }
    else {
        $('button').removeClass('zi zi_image')
    }
	$(zlicon.id).val(icon);
    $(zlicon.id + "_icon").attr("class", icon);
	CloseComDiag();
}
zlicon.init = function (id) {
	zlicon.id = id;
	zlicon.back($(id).val());
	$(id).change(function () { setTimeout(zlicon.back, 50); });
}
	zlicon.init("#ItemIcon_T");
	

</script>
}