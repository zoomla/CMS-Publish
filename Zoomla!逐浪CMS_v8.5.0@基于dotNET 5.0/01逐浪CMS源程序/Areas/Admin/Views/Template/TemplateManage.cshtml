@using System.Data
@using System.Web
@using ZoomLa.Safe
@using ZoomLa.Common
@using ZoomLa.Components
@using ZoomLa.BLL.Helper
@model ZoomLa.SQLDAL.SQL.PageSetting
@functions{
    public string TemplateDir
    {
        get
        {
            string _tempdir = (SiteConfig.SiteOption.TemplateDir.TrimEnd('/') + "/").ToLower();
            string setdir = (Context.Request.Query["setTemplate"]);//指定要跳转到的目录位置,强制限于Template之下
            if (string.IsNullOrEmpty(setdir))
            {
                return _tempdir;
            }
            else
            {
                //从云端模板直接跳转
                if (setdir.ToLower().IndexOf("/template/") != 0)
                {
                    return "/template/" + setdir + "/";
                }//点击链接跳转
                else { return setdir.TrimEnd('/') + "/"; }
            }
        }
    }
    public string CurDir { get { return SafeC.PathDeal(DataConverter.CStr(Context.Request.Query["dir"])); } }
    public string PPathDir { get { return function.VToP(SafeC.PathDeal((TemplateDir + CurDir + "/").Replace("//", "/"))); } }
    public DataTable GetTemplateDT()
    {
        DataTable dt = FileSystemObject.GetDirectoryInfos(PPathDir, FsoMethod.All);
        dt.DefaultView.RowFilter = "name<>'配置库' and name<>'标签库' and name<>'节点库' and name<>'模型库' and name<>'style' and name<>'.svn' and name<>'Thumbs.db'";
        return dt.DefaultView.ToTable();
    }
    //导航路径面包屑
    public string GetBread()
    {
        string html = "";
        string vdir = CurDir;
        if (string.IsNullOrEmpty(vdir)) { return "全部文件"; }
        else
        {
            string url = "TemplateManage?setTemplate=" + HttpUtility.UrlEncode(TemplateDir) + "&Dir=";
            string[] dirArr = vdir.Split("/".ToCharArray(), StringSplitOptions.RemoveEmptyEntries);
            html += "<a href='" + url + "'>全部文件</a>";
            for (int i = 0; i < dirArr.Length; i++)
            {
                //上一级目录链接
                url += dirArr[i] + "/";
                html += " <i class='zi zi_pathRight spanr'></i> ";
                if (i == (dirArr.Length - 1)) { html += "<span>" + dirArr[i] + "</span>"; }
                else { html += "<a href='" + url + "'>" + dirArr[i] + "</a>"; }
                //设置返回上一级
                if (dirArr.Length == 1) { html = "<a href='TemplateManage?setTemplate=" + HttpUtility.UrlEncode(TemplateDir) + "&Dir='>返回上一级</a> | " + html; }
                else if (i == (dirArr.Length - 2))
                {
                    html = "<a href='" + url + "'>返回上一级</a> | " + html;
                }
            }
        }
        return html;
    }
    public bool IsFolder(DataRow dr)
    {
        return DataConverter.CStr(dr["type"]) == "1" ? true : false;
    }
    public string GetCurentDir()
    {
        string dir = string.IsNullOrEmpty(CurDir) ? "" : CurDir.TrimEnd('/') + " / ";
        dir = dir.Replace(" ", "");
        return dir;
    }

}
@{
    DataTable dt = GetTemplateDT();
}
@section head{<title>@L.模板管理</title> }
@section content{
    @Call.SetBread(new Bread[] {
new Bread("/{manage}/Main",L.工作台),
new Bread("TemplateSet",L.模板风格),
new Bread(){url="TemplateManage",text=L.模板列表,addon="<a href='TemplateEdit?filepath='>["+L.新建模板+"]</a>" } })


    <div class="container-fluid pe-0">
        <div class="row sysRow table-responsive">
            <table class="table table-bordered">
                <tr><td>@Html.Raw(GetBread())</td></tr>
            </table>
            <table class="table table-striped table-bordered">
                <tr>
                    <th class="td_s">@L.操作</th>
                    <th>@L.名称</th>
                    <th>@L.类型</th>
                    <th>@L.修改时间</th>
                </tr>
                @foreach (DataRow dr in dt.Rows)
                {
                    <tr>
                        <td class="text-center">
                            <div class="option_area dropdown">
                                <a href="#" class="dropdown-toggle" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">@L.操作<span class="caret"></span></a>
                                <ul class="dropdown-menu" role="menu">
                                    @if (!IsFolder(dr))
                                    {
                                        <li class="dropdown-item"><a href="javascript:;" data-cmd="DownFiles"><i class="zi zi_download"></i> @L.下载</a></li>}
                                    @*CommandName='<%#Eval("type") == "1" ? "DelDir":"DelFiles" %>'*@
                                    <li class="dropdown-item"><a href="javascript:;" onclick="return confirm('@Html.Raw(L.你确认要删除该文件夹或文件吗)？')"> <i class="zi zi_trash"></i> @L.删除</a></li>
                                    @*CommandName='<%#Eval("type") == "1" ? "CopyDir":"CopyFiles" %>'*@
                                    @if (!IsFolder(dr))
                                    {
                                        <li class="dropdown-item"><a href="javascript:;"> <i class="zi zi_copy"></i> @L.复制</a></li>}
                                </ul>
                            </div>
                        </td>
                        <td class="text-start">
                            <i class="@(DataConverter.CStr(dr["type"])=="1"?"zi zi_folders name_ico_c":"zi zi_textbook name_ico_c")"></i>
                            @if (IsFolder(dr))
                            {<a href="javascript:;" onclick="OpenDir('@dr["Name"]');">@dr["Name"]</a> }
                        else
                        {<a href="javascript:;" onclick="EditFile('@dr["Name"]');">@dr["Name"]</a>}
                        </td>
                        <td>
                            @(DataConverter.CStr(dr["type"]) == "1" ? "文件夹" : dr["content_type"])
                        </td>
                        <td>@DateHelper.ToDate(dr["lastWriteTime"])</td>
                    </tr>
                }
            </table>
        </div>
    </div>
    @*<div class="alert alert-light">
            <a href="javascript:;" class="btn btn-outline-info" onclick="ShowDirDiag()">创建目录</a>
            <asp:Button ID="BackGrup" class="btn btn-outline-info" runat="server" Text="备份当前方案" OnClick="BackGrup_Click" OnClientClick="if(!this.disabled) return confirm('是否创建备份？(提示：备份同名文件会覆盖！)');" />
            <div id="create_dir" style="display:none;">
                <asp:TextBox ID="txtForderName" class="form-control max20rem" runat="server"></asp:TextBox>
                <asp:Button ID="btnCreateFolder" class="btn btn-primary" runat="server" Text="创建" OnClick="btnCreateFolder_Click" />
            </div>
        </div>*@

}
@section script{
    <link href="/Plugins/JqueryUI/LightBox/css/lightbox.css" rel="stylesheet" media="screen" />
    <script src="/Plugins/JqueryUI/LightBox/jquery.lightbox.js"></script>
    <script src="/js/Controls/ZL_Dialog.js"></script>
    <script>
        var diag = new ZL_Dialog();
    function ShowDirDiag() {
        diag.title = "@Html.Raw(L.创建目录)";
        diag.width = "diag_width";
        diag.content = "create_dir";
        diag.ShowModal();
        }
        function OpenDir(fname) {
            var dir = "@GetCurentDir()";
            var url = "TemplateManage?setTemplate=@HttpUtility.UrlEncode(TemplateDir)&dir=" + encodeURI( dir +fname);
            location = url;
        }
        function EditFile(fname) {
            var dir = "@Html.Raw(GetCurentDir())";
            if (fname.indexOf(".") < 0) { return; }
            var exname = GetExName(fname).toLowerCase();
            switch (exname) {
                case "txt":
                case "html":
                case "shtml":
                case "htm":
                    var url = "TemplateEdit?setTemplate=@HttpUtility.UrlEncode(TemplateDir)&filepath=" +  encodeURI(dir +fname);
                    location = url;
                    break;
                case "jpg":
                case "png":
                    break;
                case "gif":
                    break;
            }
        }
    </script>

}