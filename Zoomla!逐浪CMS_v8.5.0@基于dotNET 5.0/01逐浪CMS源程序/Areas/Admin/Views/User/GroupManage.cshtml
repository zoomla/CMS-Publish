
@section head{<title>@L.会员组管理</title> }
@section content{ 
@Call.SetBread(new Bread[] {
        new Bread("{admin}"),
        new Bread(Call.PathAdmin("User/UserManage"),L.用户管理),
        new Bread() {url=Context.Request.RawUrl(), text=L.会员组管理 ,addon= "[<a href='GroupAdd'>("+@L.添加会员组+")</a>]" }},
        Call.GetHelp(38)
        )
<div class="container-fluid pe-0">
<div class="row sysRow">
<table class="table table-striped table-bordered table-hover">
    <tr>
		<th scope="col" class="td_s"><strong>ID</strong></th>
		<th scope="col"><strong>@L.会员组名 </strong></th>
        <th scope="col"><strong>@L.会员组说明</strong></th>
		<th scope="col"><strong>@L.注册可选</strong></th>
        <th scope="col"><strong>@L.默认</strong></th>
        <th scope="col"><strong>@L.会员数</strong></th>
		<th scope="col"><strong>@L.操作</strong></th>
	</tr>
    <tbody id="EGV"></tbody>
</table>
</div>
</div>
}
@section script{ 
<script src="/JS/Controls/ZL_Array.js"></script>
<script>
    var table = $("#EGV"), api = "Group_API?action=";
    //子父级之间依靠 data-pid来确认,如何比较好的定位层级
    var trTlp = '<tr data-id="@@GroupID" data-pid="@@ParentGroupID" data-layer="@@layer" title="单击打开" class="datarow"><td>@@GroupID</td><td><fun>getLayer("@@layer","@@Child")</fun>@@GroupName  <fun>getLayer_tips("@@layer","@@Child")</fun></td>'
                + '<td>@@Description</td><td><fun>GetReg("@@RegSelect")</fun></td><td><fun>GetDefault("@@IsDefault")</fun></td>'
                + '<td><a href="UserManage?GroupId=@@GroupID" title="会员列表">@@UserNum</a></td>'
                + '<td><fun>GetOper("@@GroupID","@@UserModel","@@IsDefault")</fun> <a href="javascript:;" onclick="showOrder(@@ParentGroupID);"></a></td>'
                + '</tr>';
    //获取数据
    var getlist = function (obj, pid, isappend) {//需要添加的行
        $(obj).unbind("dblclick").unbind("click");
        group.list(pid, function (data) {
            data=JSON.parse(data);
            setLayer(data, $(obj).data("layer"));
            var items = JsonHelper.FillItem(trTlp, data, function ($item, mod) {
                $item.bind("click", function () { getlist(this, mod.GroupID);})
            });
            if (isappend) { $(obj).append(items); }
            else { $(obj).after(items); $(obj).bind("dblclick", function () { ToggleChild(obj,'hide'); }).bind('click', function () { ToggleChild(obj,'show'); }); }
        });
    }
    //为数据获取加上层级
    var setLayer = function (data, layer) {
        var newLayer = Convert.ToInt(layer, 0) + 1;
        for (var i = 0; i < data.length; i++) {
            data[i].layer = newLayer;
        }
    }
    //根据层级,显示对应的空格和图形
    var getLayer = function (layer, child) {
        var layerTlp = '<img src="/Images/TreeLineImages/tree_line4.gif" />';
        var lineTlp = '<img src="/Images/TreeLineImages/t.gif" />';
        layer = Convert.ToInt(layer, 0);
        child = Convert.ToInt(child, 0);
        lineTlp += child > 0 ? '<i class="zi zi_plus"></i> ' : '<i class="zi zi_minus"></i> ';
        var html = "";
        for (var i = 1; i < layer; i++) {
            html += layerTlp;
        }
        return (html + lineTlp);
    }
    //有子级会员组时文字提示
    var getLayer_tips = function (layer, child) {
        let tips = '';
        layer = Convert.ToInt(layer, 0);
        child = Convert.ToInt(child, 0);
        tips += child > 0 ? '<small class="ps-1">[↓单击显示下级分组]</small>' : ' ';
        return tips;
    }
    //显示或隐藏子级
    function ToggleChild(obj,action) {
        var id = $(obj).data("id");
        var $tr = table.find("tr[data-pid=" + id + "]");
        //if ($tr.is(":hidden")) { $tr.show(); }
        //else { HideByPid(id); }
        if (action == 'show') { $tr.show(); }
        else { HideByPid(id); }
    }
    function HideByPid(pid) {
        $trs = table.find("tr[data-pid=" + pid + "]");
        if (!$trs || $trs.length < 1) return;//不存在,或下再无子级时跳出递归
        for (var i = 0; i < $trs.length; i++) {
            HideByPid($($trs[i]).data("id"));
        }
        table.find("tr[data-pid=" + pid + "]").hide();
    }
    $(function () {
        getlist(table, "0", true);
    })
    //-------------------------------
    var group = {};
    group.list = function (pid, callback) {
        $.post(api + "list", { "ParentID": pid }, callback);
    }
    function GetReg(isselect) {
        if (isselect == "false") {
            return "<i class='zi zi_times' style='color:red;'></i>";
        }
        else {
            return "<i class='zi zi_check' style='color:green;'></i>";
        }
    }
    function GetDefault(def) {
        if (def == "true") { return "<i class='zi zi_check' style='color:green;'></i>"; }
        else { return "<i class='zi zi_times' style='color:red;'></i>"; }
    }
    function GetOper(groupid, usermodel, isdefault) {
        var str = "";
        var dfstr = "";
        //if (usermodel > 0) {
        //    str = "<a href='<%=customPath2/Content/Model/ModelField?ModelType=3&ModelID=" + usermodel + "'>个性字段</a> ";
        //}
        //if (isdefault == "true") {
        //    dfstr = "<a href='javascript:;' disabled='disabled' class='option_style'><i class='zi zi_flag' title='默认'></i>默认</a>";
        //} else {
        //    dfstr = "<a href='Group_API?action=default&id=" + groupid + "' class='option_style'><i class='zi zi_flag' title='默认'></i>默认</a>";
        //}
        return "<a href='GroupAdd?id=" + groupid + "' class='option_style'><i class='zi zi_pencilalt' title='修改'></i></a> <a href='javascript:;' onclick='del(" + groupid + ");' class='zi zi_trashalt' title='删除'></a> " + dfstr + "  " + str + "<a href='GroupAdd?ParentID=" + groupid + "' class='option_style'><i class='zi zi_plusSquare' title='添加'></i>子会员组</a>"
    }
    function del(id) {
        if (confirm("@Html.Raw(L.确定删除这个会员组吗)？")) {
            $.post(api + "del&id=" + id,{},function(){location=location;})
        }
    }
    //------------
    function showOrder(pid) {
        ShowComDiag("@(Call.PathAdmin("Com/Sort?TbName=group&"))?ParentID=" + pid, " @Html.Raw(L.会员组排序)");
    }
</script>
}