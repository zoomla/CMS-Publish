@using ZoomLa.SQLDAL
@{
    Layout = "_safe";
    DataTable tableDT = DBCenter.DB.Table_List();
    tableDT.DefaultView.RowFilter = "Name LIKE 'ZL_%'";
    tableDT.DefaultView.Sort = "Name";
    tableDT = tableDT.DefaultView.ToTable();

    string dbname = DBHelper.GetAttrByStr(DBCenter.DB.ConnectionString, "Initial Catalog");
}
@section head{
<title>@L.数据库管理</title>
<link rel="stylesheet" href="/Plugins/Markdown/css/editormd.css" />
}
@section content{
@Call.SetBread(new Bread[] {
        new Bread("{admin}"),
        new Bread(){url=Context.Request.RawUrl(), text=L.数据管理,addon="" },
        //new Bread("DBBackup","当前主数据库:" + dbname),
        new Bread(){addon="<li class=''><a data-toggle='tooltip' data-bs-placement='right' href='DBBackup' role='button' title='点击进入备份操作'>"+"当前主数据库"+ dbname +"</a>"},
})
<div class="container-fluid pe-0">
<div class="row sysRow">
<div class="col-sm-3 dbtool_l">
<div class="card-body">
    <div class="input-group" style="border-bottom:1px solid #ddd;padding-bottom:5px;">
        <input type="text" class="form-control" placeholder="@L.请输入表名" id="table_filter_t" />
        <button type="button" class="input-group-text" onclick="dbtool.table_filter();"><i class="zi zi_search"></i></button>
        <input type="hidden" id="excel" value="" />
    </div>
    <ul class="table_ul" style="overflow-y:auto;padding-left:0px;">
        @foreach (DataRow dr in tableDT.Rows)
        {
            <li class="table_item"><i class="zi zi_download"  onclick="Output('Excel','数据管理','@dr["name"]')" zico="下载" title="下载"></i> @dr["name"]</li>
        }
    </ul>
</div>
</div>
<div class="col-sm-9 dbtool_r" id="data_panel">
<div class="card">
<div class="card-header">
    <div class="btn-group d-flex flex-wrap" id="sql_btns">
        <button type="button" class="btn btn-outline-info">常规操作-&gt;</button>
        <button type="button" class="btn btn-outline-info" data-cmd="select">SELECT</button>
        <button type="button" class="btn btn-outline-info" data-cmd="update">UPDATE</button>
        <button type="button" class="btn btn-outline-info" data-cmd="insert">INSERT</button>
        <button type="button" class="btn btn-outline-info" data-cmd="delete">DELETE</button>
        <button type="button" class="btn btn-outline-info" data-cmd="leftjoin">LEFT JOIN</button>
        <button type="button" class="btn btn-outline-info" data-cmd="user">@L.查询用户</button>
        <button type="button" class="btn btn-outline-info" data-cmd="field_add">@L.增加字段</button>
    </div>
</div>
<div class="card-body p-0">
    <div id="sqlTestarea">
        <textarea runat="server" id="sql_t" class="aa" style="display:none;"></textarea>
    </div>

    @*下面这个才是旧的调用的*@
    @* <textarea runat="server" id="sql_t" style="display: none;"></textarea> *@

    <div class="card">
        <div class="card-header text-center">
            <div class="dropdown d-inline">
                <button class="btn btn-outline-info dropdown-toggle conceal" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    管理<span id="s_name"></span>表
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <button type="button" class="dropdown-item" onclick="Inquire('SELECT')" id="execute_btn">SELECT</button>
                    <button type="button" class="dropdown-item" onclick="Inquire('UPDATE')" id="execute_btn">UPDATE</button>
                    <button type="button" class="dropdown-item" onclick="Inquire('DELETE')" id="execute_btn">DELETE</button>
                    <button type="button" class="dropdown-item" onclick="Inquire('DROP')" id="execute_btn">DROP</button>
                </div>
            </div>
            <button type="button" class="btn btn-info ms-2" onclick="dbtool.execute();" id="execute_btn"><i class="zi zi_play"></i> 执行SQL语句查询</button>
        </div>
    </div>
</div>
    <div id="result_div">
        <div class="dbtool_well">
            <i class="zi zi_tv"></i>
            <h2>@L.请在上方输入SQL语句</h2></div>
        </div>
 </div>
</div>
</div>
</div>
</div>


<div style="display:none;">
<div id="sql_select">SELECT TOP 10 * FROM ZL_CommonModel</div>
<div id="sql_update">UPDATE ZL_CommonModel SET Title='' WHERE GeneralID=0</div>
<div id="sql_insert">INSERT INTO ZL_User (UserName,UserPwd,Email,Question,Answer) VALUES('UserName','UserPwd','Email','Question','Answer')</div>
<div id="sql_delete">--高风险操作
DELETE FROM ZL_CommonModel WHERE GeneralID IN ()</div>
<div id="sql_leftjoin">SELECT * FROM ZL_CommonModel A LEFT JOIN ZL_C_Article B ON A.ItemID=B.ID</div>
<div id="sql_user">SELECT * FROM ZL_User WHERE UserName LIKE '%admin%'</div>
<div id="sql_field_add">ALTER TABLE [TableName] ADD [FieldName] nvarchar(500)</div>
</div>
}
@section script{
<script src="/Plugins/Markdown/editormd.js"></script>
<script src="/JS/Plugs/base64.js"></script>
<script src="/JS/ZL_Regex.js"></script>
<script src="/JS/Modal/APIResult.js"></script>
<script>
function getCodeValue() {
	return (localStorage.modeName) ? $("#"+localStorage.modeName.replace("text/", "").replace("c/c++", "cpp")+"-code").val() : $("#html-code").val();
}
var sqlEditor = null;
$(function() {
    sqlEditor = editormd("sqlTestarea", {
		width            : "100%",
		height           : 720,
		watch            : false,
		toolbar          : false,
		codeFold         : true,
		searchReplace    : true,
		placeholder      : "开始编程!",
		@* value            : getCodeValue(), *@
		theme            : (localStorage.theme) ? localStorage.theme : "default",
		mode             : (localStorage.mode) ? localStorage.mode : "text/html",
		path             : '/Plugins/Markdown/lib/'
	});
  $("#sql_btns button").click(function () {
        var cmd = $(this).data("cmd");
        var sql = $("#sql_" + cmd).text() + " \r\r";
        sqlEditor.setValue(sql)
    }); 
    localStorage.mode = 'sql';
    localStorage.modeName = 'text/html';
    sqlEditor.setCodeMirror('mode','sql');
});

$(".conceal").hide();
function Inquire(type) {
    var Name = $(".table_item.active").text();
    if (Name == "") {
        $("#modal").alert("11111");
        return;
    }
    switch (type) {
        case "SELECT":
            var select = "SELECT TOP 10 * FROM" + Name + ' \r\r';
            sqlEditor.setValue(select)
            break;
        case "UPDATE":
            var update = "-- 不可逆操作 \r\r UPDATE " + Name +" SET Value=新Value"+ " WHERE Value=旧Value" + ' \r\r';
            sqlEditor.setValue(update)
            break;
        case "DELETE":
            var del = "-- 高风险操作 \r\r DELETE FROM " + Name +" WHERE ID=ID"+ ' \r\r';
            sqlEditor.setValue(del)
            break;
        case "DROP":
            var drop = "-- 高风险操作 \r\r DROP TABLE " + Name + ' \r\r';
            sqlEditor.setValue(drop)
            break;
    }
}
var dbtool = { api: "Default?action=", field: {} };
dbtool.execute = function () {
    var sql = sqlEditor.getValue();
    if (ZL_Regex.isEmpty(sql)) { return false; }
    document.getElementById("execute_btn").disabled = "disabled";
      $("#result_div").load("Default_Result", { "sql": Base64.encode(sql) }, function () {
        document.getElementById("execute_btn").disabled = "";
  
    });
}
dbtool.table_filter = function () {
    var skey = $("#table_filter_t").val();
    if (ZL_Regex.isEmpty(skey)) { $(".table_item").show(); }
    else
    {
        skey = skey.replace(/ /ig, "").toUpperCase();
        $(".table_item").each(function () {
            if ($(this).text().toUpperCase().indexOf(skey) < 0) { $(this).hide(); }
            else { $(this).show(); }
        });
    }
}
dbtool.field.update = function (fdname) {
    var tbname = $(".table_item.active").text();
    if (ZL_Regex.isEmpty(tbname)) { alert("@Html.Raw(L.表名不能为空)"); return false; }
    if (ZL_Regex.isEmpty(fdname)) { alert("@Html.Raw(L.字段名不能为空)"); return false; }
    var json = { "tbname": tbname, "fdname": fdname, len: "", type: "" };
    var $len = $("#field_len_" + fdname);
    var $type = $("#field_type_" + fdname);
    json.len = $len.val(); json.type = $type.val();
    $.post(dbtool.api + "field_update", json, function (data) {
        APIResult.ifok(data, function (result) { alert("@Html.Raw(L.更新成功)"); }, function (data) { alert("error:" + data); })
    })
}
//----------------------------------
var editor = null;
$(function () {
    $(".table_item").click(function () {
        $(this).addClass("active");
        $(this).siblings().removeClass("active");
        //加载该表的字段列表
        $("#result_div").load("Default_Field", { "tbname": $(this).text() });
        $("#s_name").text($(this).text());
        $(".conceal").show();
    });
    $("#table_filter_t").keydown(function () {
        if (event.keyCode == 13) { dbtool.table_filter(); return false; }
    });
    //-------设置高度
    var height = $(window).height()-200;
    var width = $(window).width();
    $(".table_ul").css("height", height);
    //$("#result_div").css("height", (height - 310)).css("width", $("#data_panel").width());
	$("#result_div").css("height", (height - 310));

    //$("#result_div").scroll(function (e) {
    //    var $head = $("#EGV tr:first");
    //    if (e.target.scrollTop > 0 && !$head.hasClass("fixhead")) {
    //        $head.addClass("fixhead");
    //    }
    //    else if (e.target.scrollTop < 1) {$head.removeClass("fixhead");  }
    //});
})
    //下载Excel
    function Output(type, Title, name) {
        var Name = name;
        Name = Name.replace(/\s*/g, '');
        var $form = $('<form method="post" action="Output?type=' + type + '&Title=' + Title + '"></form>');
        $form.append('<input type="hidden" name="Name" value=' + Name + '>');
        $("body").append($form);//兼容IE
        $form.submit();
        $form.remove();
    }
</script>
}