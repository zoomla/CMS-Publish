@{
    //    protected B_MisType typeBll = new B_MisType();
    //protected M_MisType typeMod = new M_MisType();
    //protected void Page_Load(object sender, EventArgs e)
    //{
    //    EGV.txtFunc = txtPageFunc;
    //    if (!IsPostBack)
    //    {
    //        DataBind();
    //    }
    //}
    //private void DataBind(string key = "")
    //{
    //    DataTable dt = typeBll.Sels();
    //    if (!string.IsNullOrEmpty(key))
    //        dt.DefaultView.RowFilter = "TypeName like '%" + key + "%'";
    //    EGV.DataSource = dt;
    //    EGV.DataBind();
    //}
    ////处理页码
    //public void txtPageFunc(string size)
    //{
    //    int pageSize;
    //    if (!int.TryParse(size, out pageSize))//如果转换失败,即不是一个数字时
    //    {
    //        pageSize = EGV.PageSize;
    //    }
    //    else if (pageSize < 1)//小于1时,均恢复默认PageSize,默认PageSize是你给序的
    //    {
    //        pageSize = EGV.PageSize;
    //    }
    //    EGV.PageSize = pageSize;
    //    EGV.PageIndex = 0;//改变后回到首页
    //    size = pageSize.ToString();
    //    DataBind();
    //}
    //protected void EGV_PageIndexChanging(object sender, GridViewPageEventArgs e)
    //{
    //    EGV.PageIndex = e.NewPageIndex;
    //    DataBind();
    //}
    //protected void EGV_RowCommand(object sender, GridViewCommandEventArgs e)
    //{
    //    switch (e.CommandName.ToLower())
    //    {
    //        case "del":
    //            typeBll.Del(DataConvert.CLng(e.CommandArgument.ToString()));
    //            break;
    //    }
    //    DataBind();
    //}
    //protected void EGV_RowDataBound(object sender, GridViewRowEventArgs e)
    //{
    //    e.Row.Attributes["class"] = "tdbg";
    //    if (e.Row != null && e.Row.RowType == DataControlRowType.DataRow)
    //    {
    //        e.Row.Attributes["ondblclick"] = String.Format("javascript:location.href='AddWorkFlowType.aspx?ID={0}'", this.EGV.DataKeys[e.Row.RowIndex].Value.ToString());
    //        e.Row.Attributes["onmouseover"] = "this.className='tdbgmouseover'";
    //        e.Row.Attributes["onmouseout"] = "this.className='tdbg'";
    //        e.Row.Attributes["style"] = "cursor:pointer;";
    //        e.Row.Attributes["title"] = "双击修改";
    //    }
    //}
    //protected void searchBtn_Click(object sender, EventArgs e)
    //{
    //    DataBind(searchText.Text);
    //}

}
@section head{<title>类型列表</title>}
@section content{
    @Call.SetBread(new Bread[] {
    new Bread("{admin}"),
    new Bread() {url=Context.Request.RawUrl(), text=L.类型管理+" <a href='AddWorkFlowType'>[添加类型]</a>",addon="" }}, "{search}")

    <div class=" table-responsive-md pe-1">
        <table class="table table-bordered table-striped table-hover">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>类型名称</th>
                    <th>类型描述</th>
                    <th>@L.创建时间</th>
                    <th>@L.操作</th>
                </tr>
            </thead>
            @foreach (DataRow dr in Model.Rows)
            {
        <tr ondblclick="location = 'AddWorkFlowType?ID=@dr["ID"]';">
            <td>@dr["ID"]</td>
            <td>@dr["TypeName"]</td>
            <td>@dr["TypeDescribe"]</td>
            <td>@dr["CreateTime"]</td>
            <td class="excel_no td_l">
                <a href="AddWorkFlowType?ID=@dr["ID"]" class="option_style"><i class="zi zi_pencilalt"></i>@L.编辑</a>
                <a href="javascript:;" class="option_style" onclick="mvcpage.del({ ids: '@dr["ID"]', url: 'AddWorkFlowType_Delete', confirm: '@Html.Raw(L.确定要删除吗)', after: function () { location = location }});"><i class="zi zi_trashalt"></i>@L.删除</a>
            </td>
        </tr>
            }
        </table>
    </div>


    <style>
        .allchk_l {
            display: none;
        }
    </style>
}
