@using ZoomLa.Common
@using ZoomLa.BLL
@using ZoomLa.Model
@model ZoomLa.Model.M_ClassRoom
@{

}
@section head{
    <link type="text/css" href="/res/css/bootstrap-switch.min.css" rel="stylesheet" />
    <title>添加班级</title>
}
@section content{
<div class="w-100">
@Call.SetBread(new Bread[] {
new Bread("{admin}"),
new Bread("Papers_System_Manage","教育模块"),
new Bread("ClassRoomManage","班级管理")
})
<form method="post" action="@MVCHelper.GetAction("ClassRoom_Add",Context.Request)" onsubmit="return CheckData();">
<div class="container-fluid pe-0">
<div class="row sysRow table-responsive">
    <table class="table table-striped table-bordered table-hover sys_table">
        <tr>
            <th scope="col" class="w12rem_lg"><strong>班级名称</strong></th>
            <td scope="col">
                @Html.TextBoxFor(m => m.RoomName, new { @class = "form-control max20rem" })
            </td>
        </tr>
        <tr>
            <th><strong>所属学校</strong><span class="text-danger">*</span></th>
            <td>
			  <div class="input-group ">
			  <input type="text" id="SchoolName_T" name="SchoolName_T" value="@ViewBag.schName" class="form-control max20rem" />
				  <input type="button" class="btn btn-info" onclick="ShowSchool();" value="填写或选择学校" />
		  	  </div>
				<small class="text-muted">填入的学校不存在则创建新学校</small>
            </td>
        </tr>
        <tr>
            <th><strong>班级年级</strong></th>
            <td>
                @Html.DropDownListFor(m => m.Grade, ViewBag.gradelist as SelectList, new { @class = "form-control max20rem form-select" })
            </td>
        </tr>
        <tr>
            <th><strong>班主任</strong></th>
            <td>
			  <div class="input-group ">
			  <input type="text" id="Manager_T" value="@ViewBag.teaName" class="form-control max20rem"/>
				  <button type="button" onclick="ShowSelTearch()" class="btn btn-info">选择教师</button>
		  	  </div>
                <input type="hidden" id="Manager_Hid" name="Manager_Hid" value="@Model.CreateUser" />
            </td>
        </tr>
        <tr>
            <th><strong>最大人数</strong></th>
            <td>
                @Html.TextBoxFor(m => m.Integral, new { @class = "form-control max20rem int", @value = "100" })
            </td>
        </tr>
        <tr>
            <th><strong>是否毕业</strong></th>
            <td>
                <input type="checkbox" class="switchChk" id="IsDone" name="IsDone" @(Model.IsDone == 1 ? "checked='checked'" : "") />
            </td>
        </tr>
        <tr>
            <th><strong>班级星级</strong></th>
            <td>
                <div class="col-md-9" id="star_div">
                    <i class="staricon zi zi_starLine" data-val="1"></i>
                    <i class="staricon zi zi_starLine" data-val="2"></i>
                    <i class="staricon zi zi_starLine" data-val="3"></i>
                    <i class="staricon zi zi_starLine" data-val="4"></i>
                    <i class="staricon zi zi_starLine" data-val="5"></i>
                    <input type="hidden" id="star_hid" name="star_hid" value="@Model.ClassStar" />
                </div>
            </td>
        </tr>
        <tr>
            <th><strong>班级徽标</strong></th>
            <td>
                @Html.TextBoxFor(m => m.Monitor, new { @class = "form-control max20rem" })
            </td>
        </tr>
        <tr>
            <th><strong>是否审核</strong></th>
            <td>
                <input type="checkbox" id="IsTrue" name="IsTrue" class="switchChk" @(Model.IsTrue == 1 ? "checked='checked'" : "") />
            </td>
        </tr>
        <tr>
            <th><strong>班级介绍</strong></th>
            <td>
                @Html.TextAreaFor(m => m.Classinfo, new { @class = "form-control m50rem_50"})
            </td>
        </tr>
        <tr>
            <td colspan="2" class="text-center">
                <button type="submit" class="btn btn-info">确认添加</button>
                <a href="ClassRoomManage" class="btn btn-info">返回列表</a>
            </td>
        </tr>
    </table>
	</div>
	</div>
</form>
</div>
}
@section script{
    <script type="text/javascript" src="/res/js/bootstrap-switch.js"></script>
    <script>
        $(function () {
            ZL_Regex.B_Num('.int');
            StarByVal(@Model.ClassStar);
            validate.zl_init($("form"), {
                rules: {
                    RoomName: { required: true },
                    SchoolName_T: { required: true },
                    Integral: { required: true, digits: true }
                },
                messages: {
                    RoomName: { required: "班级名称不能为空" },
                    SchoolName_T: { required: "学校名称不能为空" },
                    Integral: { required: "最大人数不能为空", digits: "人数只能为整数" }
                },
            }, { placement: 'right', style: 'green' });
        })
        function StarInit() {
            $(".staricon").hover(function () {
                //fa-star-o空心,
                $(this).removeClass("fa-star-o").addClass("fa-star");
                $(this).prevAll(".staricon").removeClass("fa-star-o").addClass("fa-star");
            }, function () {
                StarByVal($("#star_hid").val());
            }).click(function () {
                $("#star_hid").val($(this).data("val"));
                StarByVal($(this).data("val"));
            });
            //移出div块,除非已click,否则清除值
            $("#star_div").mouseleave(function () {
                var val = $("#star_hid").val();
                StarByVal(val);
            });
        }
        //根据val点亮或熄灭评星
        function StarByVal(val) {
            if (val == "" || val == 0 || val == "0") { $(".staricon").removeClass("fa-star").addClass("fa-star-o"); }
            else
            {
                var ref = $(".staricon[data-val=" + val + "]"); ref.removeClass("fa-star-o").addClass("fa-star");
                ref.prevAll().removeClass("fa-star-o").addClass("fa-star");
                ref.nextAll().removeClass("fa-star").addClass("fa-star-o");
            }
        }
        //提交检测数据
        function CheckData() {
            if ($("#txtRoomName").val().trim() == "") { alert("班级名称不能为空!"); $("#txtRoomName").focus(); return false; }
            return true;
        }
        function GetTearcher(id, username) {
            $("#Manager_T").val(username);
            $("#Manager_Hid").val(id);
            teachDiag.CloseModal();
        }
        function CloseDiag() {
            teachDiag.CloseModal();
        }
        var teachDiag = new ZL_Dialog();
        function ShowSelTearch() {
            teachDiag.width = "none";
            teachDiag.maxbtn = false;
            teachDiag.reload = true;
            teachDiag.title = "选择教师";
            teachDiag.url = "/User/Exam/SelTearcher";
            teachDiag.width = "width1100";
            teachDiag.ShowModal();
        }
        //选择图标
        function ShowIcon() {
            comdiag.ajaxurl = "/Common/icon2.html";
            comdiag.title = "选择奥森图标";
            comdiag.ShowModal();
        }
        function LoadIcon() {
            $("[name=glyphicon]").click(function () {
                $("#Monitor").val($(this).prev().prev().attr("class"));
                $("#imgIcon").attr("class", $(this).prev().prev().attr("class"));
                CloseComDiag();
            });
        }
        //选择学校
        function ShowSchool() {
            teachDiag.url = "/User/Exam/SelSchool";
            teachDiag.title = "选择学校";
            teachDiag.reload = true;
            teachDiag.maxbtn = false;
            teachDiag.width = "width1100";
            teachDiag.ShowModal();
        }
        function CloseDiag() {
            teachDiag.CloseModal();
        }
        function GetSchoolName(name) {
            $("#SchoolName_T").val(name);
            teachDiag.CloseModal();
        }
    </script>
}