@model ZoomLa.Model.M_Node
@using ZoomLa.BLL.Content
@using ZoomLa.Model.Content
@functions
{
    B_Node nodeBll = new B_Node();
    B_Model modBll = new B_Model();
    public string GetTemplate(string mid)
    {
        string result = "";
        string[] arr = Model.ContentModel.Split(new char[] { ',' }, StringSplitOptions.RemoveEmptyEntries);
        if (IsInModel(mid, arr))
        {
            result = nodeBll.GetModelTemplate(Model.NodeID, DataConverter.CLng(mid));
            if (string.IsNullOrEmpty(result))
                result = modBll.SelReturnModel(DataConverter.CLng(mid)).ContentModule;
        }
        else
        {
            result = modBll.SelReturnModel(DataConverter.CLng(mid)).ContentModule;
        }
        return result.Substring(0);
    }
    public bool IsInModel(string modelid, string[] array)
    {
        bool flag = false;
        for (int i = 0; i < array.Length; i++)
        {
            if (modelid == array[i])
            {
                flag = true;
                break;
            }
        }
        return flag;
    }
    public string GetModelIcon(DataRow dr)
    {
        string iconstr = DataConverter.CStr(dr["ItemIcon"]);
        return StringHelper.GetItemIcon(iconstr);
    }
    public string GetChk(string mid)
    {
        string result = "";
        string[] arr = Model.ContentModel.Split(new char[] { ',' }, StringSplitOptions.RemoveEmptyEntries);
        if (IsInModel(mid, arr))
        {
            result = "<input type=\"checkbox\" id=\"ChkModel\" name=\"ChkModel\" value=\"" + mid + "\" checked />";
        }
        else
        {
            result = "<input type=\"checkbox\" id=\"ChkModel\" name=\"ChkModel\" value=\"" + mid + "\" />";
        }
        return result;
    }
}
@{
    M_Node parentMod = nodeBll.SelReturnModel(Model.ParentID);
    DataTable modelDT = modBll.GetList();
}
@section head{<title>单页信息</title>}
@section content{
<style type="text/css">
.batch_yes{display:none;}
</style>
    @Call.SetBread(new Bread[] {
new Bread("{admin}","系统设置"),
new Bread("NodeManage","节点管理"),
new Bread() {url=Context.Request.RawUrl(), text=(Model.NodeID<1?"添加节点":Model.NodeName),addon="" }},"<div class='ms-auto'><a href=''><i class='zi zi_redoalt'></i></a></div>")

<div class="container-fluid pe-0">
<form method="post" action="@MVCHelper.GetAction("NodeAdd_Submit",Context.Request)">
<link type="text/css" href="/res/css/bootstrap-switch.min.css" rel="stylesheet" />
<script src="/res/js/bootstrap-switch.js"></script>
<script src="/js/SelectCheckBox.js"></script>
<script src="/js/Controls/ZL_Array.js"></script>
<style type="text/css">
#view_rad label {display:block;}
</style>
<!-------------------------------------------------------------------------------------------------->
<div>
     <input type="hidden" name="NodeType" value="@((int)NodeEnum.SPage)"/>
      <ul class="nav nav-tabs">
                <li class="nav-item"><a class="nav-link active" href="#Tabs0" data-bs-toggle="tab">基本信息</a><input type="checkbox" class="batch_yes" value="1" name="tab_basic_chk"/></li>
                <li class="nav-item"><a class="nav-link" href="#Tabs1" data-bs-toggle="tab">栏目选项</a><input type="checkbox" class="batch_yes" value="1" name="tab_node_chk"/></li>
                <li class="nav-item"><a class="nav-link" href="#Tabs3" data-bs-toggle="tab">模板选项</a><input type="checkbox" class="batch_yes" value="1" name="tab_template_chk"/></li>
                <li class="nav-item"><a class="nav-link" href="#Tabs4" data-bs-toggle="tab">生成选项</a><input type="checkbox" class="batch_yes" value="1" name="tab_create_chk"/></li>
            </ul>
      <div class="tab-content col-12 table_box">
                <div class="co-1 tab-pane active" id="Tabs0">
                    <table class="table table-striped table-bordered sys_table">
                        <tbody>
                            <tr class="batch_no">
                                <th class="w12rem_lg">所属栏目</th>
                                <td>@parentMod.NodeName</td>
                            </tr>
                            <tr class="batch_no">
                                <th>栏目名称</th>
                                <td>
                                    <input type="text" name="TxtNodeName" ID="TxtNodeName" class="form-control m50rem_50 required" value="@Model.NodeName" />
                                    <small id="TxtNodeName_sp"></small>
                                </td>
                            </tr>
                            <tr class="batch_no">
                                <th>
                                    栏目标识名
                                </th>
                                <td>
                                    <input type="text" name="TxtNodeDir" ID="TxtNodeDir" class="form-control m50rem_50 required" MaxLength="20" value="@Model.NodeDir" />
                                    <small class="text-muted">目录名只能是字母、数字、下划线组成，首字符不能是数字</small>
                                </td>
                            </tr>
                            <tr>
                                <th class="w12rem_lg">
                                    栏目图片地址
                                </th>
                                <td>
                                    <input type="text" name="TxtNodePicUrl" ID="TxtNodePicUrl" class="form-control m50rem_50" value="@Model.NodePic" />
                                </td>
                            </tr>

                            <tr>
                                <th>
                                    栏目提示
                                </th>
                                <td>
                                    <textarea name="TxtTips" ID="TxtTips" class="form-control m50rem_50" rows="2">@Model.Tips</textarea>
                                </td>
                            </tr>
                            <tr>
                                <th>
                                    栏目说明
                                </th>
                                <td><textarea name="TxtDescription" ID="TxtDescription" class="form-control m50rem_50" rows="2">@Model.Description</textarea></td>
                            </tr>
                            <tr>
                                <th>
                                    栏目META关键词
                                </th>
                                <td>
                                    <textarea name="TxtMetaKeywords" ID="TxtMetaKeywords" class="form-control m50rem_50" rows="4">@Model.Meta_Keywords</textarea>
                                </td>
                            </tr>
                            <tr>
                                <th>栏目META网页描述</th>
                                <td>
                                    <textarea name="TxtMetaDescription" ID="TxtMetaDescription" class="form-control m50rem_50" rows="4">@Model.Meta_Description</textarea>
                                </td>
                            </tr>
                            <tr class="batch_no">
                                <th>创建人</th>
                                <td><input type="text" name="CUser_T" ID="CUser_T" class="form-control max20rem" value="@Model.CUName" @Html.Raw(Model.NodeID>0?"readonly='readonly'":"")/></td>
                            </tr>
                            <tr>
                                <th>创建时间</th>
                                <td><input type="text" name="CDate_T" ID="CDate_T" onclick="WdatePicker({ dateFmt: 'yyyy/MM/dd HH:mm' })" class="form-control max20rem" value="@Model.CDate.ToString("yyyy/MM/dd HH:mm")" @Html.Raw(Model.NodeID>0?"readonly='readonly'":"")/></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="tab-pane" id="Tabs1">
                    <table class="table table-striped table-bordered sys_table">
                        <tbody>
                            <tr>
                                <th class="w12rem_lg">
                                    <strong>打开方式</strong>
                                </th>
                                <td>
                                    @MVCHelper.H_Radios("RBLOpenType", "原窗口|新窗口|父窗口|全局载入".Split('|'), "_self|_blank|_parent|_top".Split('|'), Model.OpenTypeTrue)
                                </td>
                            </tr>
                            <tr>
                                <th>
                                    <strong>点击统计时间</strong>
                                </th>
                                <td>
                                    @Html.DropDownList("ClickTimeout", MVCHelper.ToSelectList("1秒|30秒|1分钟|5分钟|10分钟|半小时|1小时|8小时|24小时".Split('|'), "1|30|60|300|600|1800|3600|28800|86400".Split('|'), Model.ClickTimeout.ToString()), new { @class = "form-control text_md" })
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                
                <div class="tab-pane" id="Tabs3">
                    <table class="table table-striped table-bordered sys_table">
                        <tbody>
                            <tr>
                                <th class="w12rem_lg">
                                    <strong>栏目首页模板</strong>
                                </th>
                                <td>
                                    @Html.Raw(PageCommon.GetTlpDP("IndexTemplate", !string.IsNullOrEmpty(Model.IndexTemplate), "/Class_" + Model.NodeID + "/Default"))
                                    <input type="hidden" name="IndexTemplate_hid" ID="IndexTemplate_hid" value="@Model.IndexTemplate" />
                                </td>
                            </tr>
                            <tr>
                                <th>
                                    <strong>栏目列表页模板</strong>
                                </th>
                                <td>
                                    @Html.Raw(PageCommon.GetTlpDP("ListTemplateFile", !string.IsNullOrEmpty(Model.ListTemplateFile), "/Class_" + Model.NodeID + "/NodePage"))
                                    <input type="hidden" name="ListTemplateFile_hid" ID="ListTemplateFile_hid" value="@Model.ListTemplateFile" />
                                </td>
                            </tr>
                            <tr>
                                <th>
                                    <strong>最新信息模板</strong>
                                </th>
                                <td>
                                    @Html.Raw(PageCommon.GetTlpDP("LastinfoTemplate", !string.IsNullOrEmpty(Model.LastinfoTemplate), "/Class_" + Model.NodeID + "/NodePage"))
                                    <input type="hidden" name="LastinfoTemplate_hid" ID="LastinfoTemplate_hid" value="@Model.LastinfoTemplate" />
                                </td>
                            </tr>
                            <tr>
                                <th>
                                    <strong>热门信息模板</strong>
                                </th>
                                <td>

                                    @Html.Raw(PageCommon.GetTlpDP("HotinfoTemplate", !string.IsNullOrEmpty(Model.HotinfoTemplate), "/Class_" + Model.NodeID + "/NodeHot"))
                                    <input type="hidden" name="HotinfoTemplate_hid" ID="HotinfoTemplate_hid" value="@Model.HotinfoTemplate" />
                                </td>
                            </tr>
                            <tr>
                                <th>
                                    <strong>推荐信息模板</strong>
                                </th>
                                <td>
                                    @Html.Raw(PageCommon.GetTlpDP("ProposeTemplate", !string.IsNullOrEmpty(Model.ProposeTemplate), "/Class_" + Model.NodeID + "/NodeElite"))
                                    <input type="hidden" name="ProposeTemplate_hid" ID="ProposeTemplate_hid" value="@Model.ProposeTemplate" />
                                </td>
                            </tr>

                        </tbody>
                    </table>
                </div>
                <div class="tab-pane" id="Tabs4">
                    <table class="table table-striped table-bordered sys_table">
                        <tbody>
                            <tr>
                                <th class="w12rem_lg">
                                    <strong>列表首页扩展名</strong>
                                </th>
                                <td>
                                    @MVCHelper.H_Radios("ListPageHtmlEx_Rad", ".html|.htm|.shtml|不生成静态".Split('|'), "0,1,2,3".Split(','), Model.ListPageHtmlEx.ToString())
                                    @if (Model.NodeID > 0)
                                    {

                                        <input type="button" onclick="createHtml();" id="Release_Btn" class="btn btn-info" value="发布该节点" />
                                    }
                                </td>
                            </tr>
                            <tr>
                                <th>
                                    <strong>栏目列表页面扩展名</strong>
                                </th>
                                <td>
                                    @MVCHelper.H_Radios("ListPageEx_Rad", "不生成静态".Split('|'), "3".Split(','), Model.ListPageEx.ToString())
                                </td>
                            </tr>
                            <tr>
                                <th>
                                    <strong>最新信息页扩展名</strong>
                                </th>
                                <td>
                                    @MVCHelper.H_Radios("LastinfoPageEx_Rad", "不生成静态".Split('|'), "3".Split(','), Model.LastinfoPageEx.ToString())
                                </td>
                            </tr>
                            <tr>
                                <th>
                                    <strong>热门信息页扩展名</strong>
                                </th>
                                <td>
                                    @MVCHelper.H_Radios("HotinfoPageEx", "不生成静态".Split('|'), "3".Split(','), Model.HotinfoPageEx.ToString())
                                </td>
                            </tr>
                            <tr>
                                <th>
                                    <strong>推荐信息扩展名</strong>
                                </th>
                                <td>
                                    @MVCHelper.H_Radios("ProposePageEx", "不生成静态".Split('|'), "3".Split(','), Model.ProposePageEx.ToString())
                                </td>
                            </tr>
                             <tr>
                                <th>
                                    <strong>节点目录生成位置</strong>
                                </th>
                                <td>
                                    @MVCHelper.H_Radios("RBLPosition", "继承父节点目录|根目录下".Split('|'), "1,0".Split(','), Model.HtmlPosition.ToString())
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="panel-footer text-center">
                    <input type="submit" ID="EBtnSubmit" class="btn btn-outline-info" value="保存设置" />
                    <a href="NodeManage" class="btn btn-outline-info">返回列表</a>
                </div>
            </div>
</div>
 </form>
</div>
}
@section script{
@Html.Partial("C_TlpDP", new C_TlpDP("TemplateIndex", ""))
<script src="/js/DatePicker/WdatePicker.js"></script>
<script src="/res/vue/vue.min.js"></script>
<script src="/js/chinese.js"></script>
<script src="/js/Controls/ZL_Array.js"></script>
<script>
function setSaveWidth(){
    //$("#save").width($($(this).attr("href")).width());
}
$(function () {
    $("#GridView1 tr>th:eq(0)").append("<input type=checkbox id='chkThisAll1'/>");
    $("#Egv tr>th:eq(0)").append("<input type=checkbox id='chkThisAll'/>");
    $("#chkThisAll").click(function () {
        CheckAll(this,"chkThisAll",1);
    });
    $("#chkThisAll1").click(function () {
        CheckAll(this,"chkThisAll1",1);
    });
    Tlp_initTemp();
    $("form").validate({});
})
var diag=new ZL_Dialog();
function ShowTList(url){
    diag.title="选择模板";
    diag.url=url;
    diag.maxbtn=false;
    diag.ShowModal();
}
function CloseDialog(){
    diag.CloseModal();
}

function selectnum() {
    //parent.document.getElementById("main_right").height = document.body.offsetHeight + 50;
}
function CheckAll(obj,id,n){
    var chkArr;
    if(n==0)
        chkArr = $(obj).parent().parent().parent().find("input[type=checkbox][id!=" + id + "]");
    if(n==1)
        chkArr = $(obj).parent().parent().parent().parent().find("input[type=checkbox][id!=" + id + "]");
    for (var i = 0; i < chkArr.length; i++) {
        chkArr[i].checked = obj.checked;

    }
}
function ColChk(name) {
    obj = event.srcElement;
    console.log(obj, $('span[data-auth=' + name + '] :checkbox'));
    $('span[data-auth=' + name + '] :checkbox').each(function () { this.checked = obj.checked; });
}
function ChkAll(type) {
    obj = event.srcElement;
    if (type == 'admin') { $("#AdminRole_EGV input[type=checkbox]").each(function () { this.checked = obj.checked; }); }
    if (type == 'group') { $("#GroupAuth_EGV input[type=checkbox]").each(function () { this.checked = obj.checked; }); }
}
/*-----------栏目名称与目录-----------*/
var nameFlag = true, dirFlag = true;
$(function () {
    @*$("#TxtNodeName").blur(function () {
        if (ZL_Regex.isEmpty(this.value)) { $("#TxtNodeName_sp").text("节点名称不能为空"); nameFlag = false; CheckBtn();  }
        $.post("@(Context.Request.RawUrl())", { action: "nodename", value: $("#TxtNodeName").val() }, function (data) {
            if (data != M_APIResult.Success) {
                nameFlag = false;
                $("#TxtNodeName_sp").text("节点名称重复,请修改节点名称");
            }
            else { $("#TxtNodeName_sp").text("*"); nameFlag = true; }
            CheckBtn();
        });
    });
    $("#TxtNodeDir").blur(function () {
        if (ZL_Regex.isEmpty(this.value)) { $("#TxtNodeDir_sp").text("栏目名称不能为空"); dirFlag = false; CheckBtn();  }
        $.post("@(Context.Request.RawUrl())", { action: "nodedir", value: $("#TxtNodeDir").val() }, function (data) {
            if (data != M_APIResult.Success) {
                dirFlag = false;
                $("#TxtNodeDir_sp").text("栏目标识重复,请修改栏目标识");
            }
            else { $("#TxtNodeDir_sp").text("*"); dirFlag = true; }
            CheckBtn();
        });
    });*@
    function CheckBtn()
    {
        if (nameFlag == true && dirFlag == true) { $("#EBtnSubmit").removeAttr("disabled"); }
        else { disBtn("EBtnSubmit"); }
    }
    if ("@Model.NodeID" == "0") { BindPY(); }

})
function BindPY() {
    $("#TxtNodeName").keyup(function () {
        Getpy("TxtNodeName", "TxtNodeDir");
    });
}
function createHtml() {
    var path = "@Call.PA("")";
    var url = path + "Content/CreateHtmlContent?CType=node&NodeID=@Model.NodeID";
    comdiag.reload = true;
    ShowComDiag(url, "生成发布");
}
</script>
}