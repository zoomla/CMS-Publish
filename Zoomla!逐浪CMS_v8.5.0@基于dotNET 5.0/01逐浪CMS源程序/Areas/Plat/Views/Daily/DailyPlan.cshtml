@using ZoomLa.Common
@functions{
    B_Blog_Sdl sdlBll = new B_Blog_Sdl();
    M_Blog_Sdl sdlMod = new M_Blog_Sdl();
    B_MisInfo typebll = new B_MisInfo();
    public M_UserInfo mu { get { return ViewBag.mu; } }
    public int UserID
    {
        get
        {
            int uid = DataConverter.CLng(Context.Request.GetParam("userId"));
            if (uid < 1) { uid = mu.UserID; }
            return uid;
        }
    }
    public int TypeID
    {
        get
        {
            if (ViewBag.type == null)
            {
                ViewBag.type = DataConverter.CLng(Context.Request.GetParam("type"));
            }
            return DataConverter.CLng(ViewBag.type);
        }
        set { ViewBag.type = value; }
    }
    public IHtmlContent TopSubName_Li = null;
    public DataTable SubList_RPT = null;
    public DataTable MyTop_RPT = null;
    //当前时间
    public DateTime CurDate
    {
        get
        {
            if (!string.IsNullOrEmpty(Context.Request.GetParam("date")))
            {
                ViewData["CurDate"] = Convert.ToDateTime(Context.Request.GetParam("date"));
            }
            if (ViewData["CurDate"] == null) { ViewData["CurDate"] = DateTime.Now; }
            return Convert.ToDateTime(ViewData["CurDate"]);
        }
    }
    public string CurDate_Pre { get { return CurDate.AddMonths(-1).ToString("yyyy/MM/dd"); } }
    public string CurDate_Next { get { return CurDate.AddMonths(1).ToString("yyyy/MM/dd"); } }
    public Dictionary<string, string> daysDic = new Dictionary<string, string>();
    public void MyBind()
    {
        //日程列表
        DataTable dt = typebll.SelByUid(UserID);
        M_MisInfo typeMod = null;
        if (dt.Rows.Count < 1)
        {
            typeMod = new M_MisInfo() { Title = "默认日程", MID = UserID, };
            typeMod.ID = typebll.insert(typeMod);
            dt = typebll.SelByUid(UserID);
            TypeID = typeMod.ID;
        }
        if (TypeID == 0)
        {
            TypeID = typebll.SelFirstModel(UserID).ID;
        }
        if (TypeID > 0)
        {
            typeMod = typebll.SelReturnModel(TypeID);
            if (typeMod == null) { function.WriteErrMsg("该类别日程不存在!"); }
            TopSubName_Li = Html.Raw("<span style='color:#999'>" + typeMod.Title + "</span>的");
        }
        else
        { TopSubName_Li = Html.Raw("所有"); }
        SubList_RPT = dt;
        GetTable(CurDate.Year, CurDate.Month);
        //抽出最近日程
        dt = sdlBll.SelTopSubject(UserID, TypeID);
        MyTop_RPT = dt;
    }
    public void GetTable(int year, int month)
    {

        int days = DateTime.DaysInMonth(year, month);//这个月有多少天
        DateTime st = Convert.ToDateTime(year + "-" + month + "-01");
        DateTime myst = new DateTime();
        DataTable dt = sdlBll.SelByMonth(st, UserID, TypeID);
        int first = (int)st.DayOfWeek, index = 0;//日期标识,当前进行到了多少天
        for (int i = 1; i <= 7; i++)//首周需要特殊处理
        {
            //Literal lit = DateBody.FindControl("Rep_W1_D" + i) as Literal;
            string lit = "";
            if (i < first)
            {
                lit = GetEmptyHtml(st.AddDays(i - first));
            }
            else
            {
                myst = st.AddDays(index);
                lit = GetHtml(GetOneDay(dt, myst), myst);
                index++;
            }
            daysDic.Add("Rep_W1_D" + i, lit);
        }
        for (int w = 2; w <= 5; w++)//第二周开始循环处理
        {
            for (int i = 1; i <= 7; i++)//周内日循环
            {
                //Literal lit = DateBody.FindControl("Rep_W" + w + "_D" + i) as Literal;
                string lit = "";
                myst = st.AddDays(index);
                if (myst.Month > month)
                {
                    lit = GetEmptyHtml(myst);
                }
                else
                {
                    lit = GetHtml(GetOneDay(dt, myst), myst);
                }
                index++;
                daysDic.Add("Rep_W" + w + "_D" + i,lit);
            }
        }
    }
    // <param name="dt">当日的数据</param>
    // <param name="hc">对应td或以后换成其他</param>
    public string GetHtml(DataTable dt, DateTime st)
    {
        string html = "<td class='datas' data-date='" + st.ToString("yyyy-MM-dd") + "'><div class='tdTitle'>" + st.Day + "</div>";
        html += "<div>";
        string div = "<div class='td_content_div' data-id='{0}'><span><a href='javascript:;' onclick='ViewDetail({0});'>{1}</a></span></div>";
        foreach (DataRow dr in dt.Rows)
        {
            //UserID,ID,Name
            html += string.Format(div, dr["ID"], dr["Name"]);
        }
        html += "</div></td>";
        return html;
    }
    public string GetEmptyHtml(DateTime st)
    {
        string strtag = "";
        if (st.Month > CurDate.Month)//判断是否是下一个月的日期
            strtag = "nextmonth";
        else
            strtag = "premonth";
        string html = "<td class='" + strtag + "' data-date='" + st.ToString("yyyy-MM-dd") + "'><div style='text-align:right;font-size:15px;color:#ddd;'>" + st.Day + "</div>";
        html += "<div>";
        html += "</div></td>";
        return html;
    }
    //获取当天是否有数据
    public DataTable GetOneDay(DataTable dt, DateTime stime)
    {
        return FilterByDate(dt, stime, stime.AddDays(1));
    }
    //内存表中指定时间的数据
    public DataTable FilterByDate(DataTable dt, DateTime stime, DateTime etime)
    {
        string st = "#" + stime.ToString("yyyy-MM-dd") + "#";
        string et = "#" + etime.ToString("yyyy-MM-dd") + "#";
        dt.DefaultView.RowFilter = "StartDate >=" + st + " And StartDate < " + et;
        return dt.DefaultView.ToTable();
    }
    //获取课程名
    public string GetSubName(DataRow dr)
    {
        return DataConverter.CStr(dr["Title"]);
    }
    //protected void SubList_RPT_ItemCommand(object source, RepeaterCommandEventArgs e)
    //{
    //    switch (e.CommandName)
    //    {
    //        case "DelType":
    //            typebll.Del(DataConvert.CLng(e.CommandArgument));
    //            sdlBll.DelByType(UserID, TypeID);
    //            Response.Redirect("DailyPlan");
    //            break;
    //        default:
    //            break;
    //    }
    //}
    public DataTable Gettime(int id)
    {
        DataTable dt= ZoomLa.SQLDAL.DBCenter.Sel("ZL_MisAttendance", "UserName='" + id+"'");
        return dt;
    }

    public DataTable GetMisInfo(int id)
    {
        DataTable dt=ZoomLa.SQLDAL.DBCenter.Sel("ZL_MisInfo", "MID=" + id);
        return dt;
    }

}
@{ 
    MyBind();
}
@section  head{ 
<title>@(mu.UserName+"的日程")</title>
<script type="text/javascript" src="/JS/jquery.validate.min.js"></script>
}
@section content{ 
<nav class="navbar navbar-default " style="display: none;">
      <div class="container-fluid">
        <div class="navbar-header">
          <button type="button" class="navbar-toggle collapsed" data-bs-toggle="collapse" data-bs-target="#bs-example-navbar-collapse-7" aria-expanded="false">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a class="navbar-brand nav_title" href="/home"><span class="zi zi_home"></span> </a><a class="navbar-brand" href="/home">@(mu.UserName)的日程</a>
        </div>

        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-7">
          <ul class="nav navbar-nav dailyplan_nav">
            <li class="active"><a href="DailyPlan@(Context.Request.QueryString)"><span class="zi zi_calendar"></span> 月</a></li>
            <li><a href="SubjectForWeek@(Context.Request.QueryString)"><span class="zi zi_squarePlus"></span> 周</a></li>
            <li><a href="SubjectForDay@(Context.Request.QueryString)"><span class="zi zi_squareHandCorrect"></span> 日</a></li>
          </ul>
        </div><!-- /.navbar-collapse -->
      </div>
    </nav>
<div class="container-fluid mt-3 mb-2">
<div class="row">
    <div class="col-md-7 offset-md-3 offset-lg-2 platcontainer">
            <div class="child_head"><span class="child_head_span1"></span> <span class="child_head_span2">日程管理</span><small class="ps-2">双击日期添加日程</small></div>
   <table class="table table-bordered" id="DateTable">
  <thead>
    <tr>
      <td colspan="7" class="text-center">
          <a href="@("DailyPlan?UserID="+UserID+"&date="+CurDate_Pre)" class="" title="上一月"><i class="zi zi_pathLeft"></i></a>
          <strong style="font-size: 25px; position: relative; top: 4px;">@(CurDate.ToString("yyyy年MM月"))</strong>
          <a href="@("DailyPlan?UserID="+UserID+"&date="+CurDate_Next)"  class="" title="下一月"><i class="zi zi_pathRight"></i></a></td>
    </tr>
    <tr>
      <td>周一</td>
      <td>周二</td>
      <td>周三</td>
      <td>周四</td>
      <td>周五</td>
      <td>周六</td>
      <td>周日</td>
    </tr>
  </thead>
  <tbody runat="server" id="DateBody" data-bs-toggle="modal">
    <tr>
      @for (int i = 1; i <= 7;i++)
      {
          @(MvcHtmlString.Create(daysDic["Rep_W1_D"+i]))
      }
    </tr>
    <tr>
        @for (int i = 1; i <= 7; i++)
        {
            @(MvcHtmlString.Create(daysDic["Rep_W2_D"+i]))
        }
    </tr>
    <tr>
        @for (int i = 1; i <= 7; i++)
        {
            @(MvcHtmlString.Create(daysDic["Rep_W3_D" + i]))
        }
    </tr>
    <tr>
        @for (int i = 1; i <= 7; i++)
        {
            @(MvcHtmlString.Create(daysDic["Rep_W4_D" + i]))
        }
    </tr>
    <tr>
        @for (int i = 1; i <= 7; i++)
        {
            @(MvcHtmlString.Create(daysDic["Rep_W5_D" + i]))
        }
    </tr>
  </tbody>
</table>
</div>
<div class="col-md-3">
<div class="mb-2">
    <div class="card">
        <div class="card-header">日程列表[<a href="DailyPlan?type=-1">所有日程</a>]<span class="pull-right"><a href="javascript:;" title="添加日程" onclick="ShowTypeDiag()"> <i class="zi zi_plus"></i></a></span></div>
        <ul class="list-group ullist" id="sublist">
            @foreach (DataRow dr in GetMisInfo(UserID).Rows)
            {
                <li class="list-group-item" data-uid="@dr["MID"]" data-type="@dr["ID"]">@GetSubName(dr)
                    <span class="pull-right">
                        <a href="javascript:;" title="修改" onclick="event.stopPropagation();ShowEditType(@dr["ID"],'@dr["Title"]')"><span class="zi zi_pencilalt"></span></a>
                        @*<asp:LinkButton runat="server" CommandName="DelType" OnClientClick="event.stopPropagation(); return confirm('确认删除该日程吗?')" CommandArgument='<%#Eval("ID") %>'><span class="zi zi_trashalt"></span></asp:LinkButton>*@
                    </span>
                </li>
            }
        </ul>
        @if (GetMisInfo(UserID).Rows.Count < 1)
        {
            <div class="card-body empty_div" id="EmptySub_Div">
                <p>没有相关日程!</p>
            </div>
        }

    </div>
</div>
<div class="mt-2">
    <div class="card">
        <div class="card-header">@(TopSubName_Li)日程</div>
        <ul class="list-group ullist" id="lastlist">
            @foreach (DataRow dr in Gettime(UserID).Rows)
            {
                <li class="list-group-item" data-id="@dr["ID"]"><i class="zi zi_clock" zico="时钟"></i> <span class="badge bg-primary">@dr["BeginTime"]</span> <span class="last_title">@dr["Department"]</span> @*<span class="pull-right last_date">@dr["ID"]</span>*@</li>
                @*<li class="list-group-item" data-id="@dr["ID"]"><span class="last_title">@dr["Name"]</span> <span class="pull-right last_date">@dr["StartDate"]</span></li>*@
            }
        </ul>
        @if (Gettime(UserID).Rows.Count < 1)
        {
            <div class="card-body empty_div" id="listempty_div">
                <p>您还没有日程!</p>
            </div>
        }

    </div>
</div>
</div>
</div>
</div>
}
@section script{ 
<script>
    function VoteCheck() {
        var validator = $("#form1").validate({ meta: "validate" });
        return validator.form();
    }
    $(function () {
        //上一个月
        $("#DateBody .premonth").click(function () {
            $("#PreMonth_B").click();
        });
        //下一个月
        $("#DateBody .nextmonth").click(function () {
            $("#NextMonth_B").click();
        });
        $("#DateBody .datas").dblclick(function () {
            ShowComDiag("DailyPlan_Add?userid=" + userid + "&TypeID=@(TypeID)", "添加日程");
        });
        //日程列表
        var type = '@(TypeID)', userid = "@(UserID)";
        $("#sublist [data-uid='" + userid + "'][data-type='" + type + "']").addClass("sub_active");
        $("#sublist li").click(function () {
            window.location.href = "DailyPlan?userid=" + $(this).data('uid') + "&type=" + $(this).data("type");
        });
        //最近日程点击事件
        $("#lastlist li").click(function () { ViewDetail($(this).data('id')); });
    });
    //日程详情弹窗
    function ViewDetail(id) {
        ShowComDiag("DailyPlan_Add?ID="+id, "日程详情");
    }
    //关闭弹窗
    function HideMe() {
        CloseComDiag();
    }
    function HideTypeDialog(){
        HideMe();
        location.href = "DailyPlan";
    }
    function UpdateData(id, content) {
        $(".td_content_div[data-id='" + id + "'] a").text(content);
        $("#lastlist [data-id='" + id + "'] .last_title").text(content);
    }
    function DelData(id) {
        $(".td_content_div[data-id='" + id + "']").remove();
        $("#lastlist [data-id='" + id + "']").remove();
    }
    //添加日程类型
    function ShowTypeDiag() {
        ShowComDiag("DailyType_Add?userid=" +@UserID, "日程类别");
    }
    //修改日程类型
    function ShowEditType(id, title) {
        ShowComDiag("DailyType_Add?id=" + id + "&userid=" +@UserID+"", title);
    }
    setactive("日程");
    function mybind() { location = location; }
</script> 
}
