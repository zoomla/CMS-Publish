@model ZoomLaCMS.Control.C_MBEditor
@{

}
@functions{
    public string GetId(string id) { return Model.ValueControlId + "_" + id; }
}
<div class="mb_body">
    <div class="card" style="padding-bottom:0px;">
        <div class="card-header" style="position:relative;text-align:center;">
            <span>@Model.Title</span>
        </div>
        <div class="card-body" style="padding:0px;position:relative;">
            <div id="@GetId("emotion_div")" style="display:none; z-index:10;position:absolute;width:800px;">
                <input type="hidden" ID="@GetId("emotion_hid")" name="@GetId("emotion_hid")" Value="[]" />
                <iframe src="" class="emotion_ifr" id="@GetId("emotion_if")"></iframe>
            </div>
            <textarea placeholder="说两句吧..." maxlength="3000" id="@GetId("t")" name="@GetId("t")" class="mb_content"></textarea>
            <div class="weui-cells weui-cells_form" id="@GetId("up_form")" style="display: block;">
                <div class="weui-cell">
                    <div class="weui-cell__bd">
                        <div class="weui-uploader">
                            <div class="weui-uploader__bd">
                                <ul class="weui-uploader__files" id="@GetId("up_files")"></ul>
                                @*<div id="uploader" class="uploader mt-2">
                                    <ul class="filelist"></ul>
                                </div>*@
                                <div class="weui-uploader__input-box"  id="upfile_btn">
                                    <input type="hidden" ID="Attach_Hid" name="Attach_Hid" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer" style="padding:3px;">
            <div class="mb_submit_wrap">
                @if (Model.ShowVCode)
                {
                    <div class="input-group" style="margin-bottom:5px;">
                        <input type="text" id="@Model.VCodeControlId" name="@Model.VCodeControlId" placeholder="验证码" maxlength="6" class="form-control" autocomplete="off" style="margin-bottom:0px;min-width:120px;" />
                        <span class="input-group-append">
                            <img id="@(Model.VCodeControlId)_img" class="codeimg" title="点击刷新验证码" style="height:38px;" />
                        </span>
                    </div>
                    <input type="hidden" id="@(Model.VCodeControlId)_hid" name="@(Model.VCodeControlId)_hid" />
                }
                <input type="submit" value="发布" class="btn btn-info btn-block submit" id="@GetId("submit")" />
            </div>
            @*<div style="margin-top:5px;">
                    <a class="btn btn-info btn-sm emotion_btn" onclick="emotion.choose();"><i class="zi zi_smile"></i></a>
                    <a class="btn btn-info btn-sm image_btn" onclick="$('#uploaderInput').click();"><i class="zi zi_images"></i></a>
                </div>*@
        </div>
    </div>
    @*用于标识当前编辑器类型*@
    <input type="hidden" name="editor" value="mbeditor" />
    @*存储拼接转换后的内容*@
    <input type="hidden" id="@(Model.ValueControlId)" name="@(Model.ValueControlId)" />
    <input type="hidden" id="@(GetId("src"))" name="@(GetId("src"))" value="@Model.Content" />
</div>
@*
    <link href="/res/css/weui.min.css" rel="stylesheet" />
    <script src="/res/js/weui.js"></script>
    <script src="/JS/ZL_ValidateCode.js"></script>
    @Html.Partial("Comp/MBEditor", new ZoomLaCMS.Control.C_MBEditor()
    {
        Title = "回复留言",
        ValueControlId = "MB_Content",//有多个控件,则必须不同
        VCodeControlId= "VCode"
    })
*@
<style type="text/css">
    .mb_body .card-footer a.btn {
        font-size: 20px;
        margin-right: 5px;
        padding-top: 2px;
        padding-bottom: 2px;
        cursor: pointer;
        color: #fff;
    }

    .mb_body .weui-cells {
        margin-top: 0px;
    }

    .mb_body .weui-uploader__files {
        display: inline-block;
    }

    .mb_body .mb_submit_wrap .text_x {
        display: inline-block;
    }

    .mb_body .mb_submit_wrap .zi {
        position: absolute;
        margin-left: -20px;
        top: 10px;
    }

    .mb_body .mb_content {
        width: 100%;
        height: 260px;
        border: none;
        padding: 5px 8px;
        resize: none;
    }

    .mb_body .emotion_ifr {
        width: 100%;
        height: 380px;
        border: none;
        overflow: hidden;
    }
</style>
<link href="/JS/Controls/ZL_Webup.css" rel="stylesheet" />
<script src="/JS/Controls/ZL_Dialog.js"></script>
<script src="/JS/Controls/ZL_Webup.js?v=1"></script>
<script>
    var diag = new ZL_Dialog(); diag.title = "文章浏览"; diag.width = " ";
    var diag1 = new ZL_Dialog(); diag1.title = "文件上传(最多支持5个)"; diag1.content = "fileup_div"; diag1.width = " ";
    var mbDiag = new ZL_Dialog(); mbDiag.maxbtn = false; mbDiag.backdrop = true; mbDiag.width = "mobilediag";
    function ShowMBDiag(url, title) {
        mbDiag.url = url;
        mbDiag.title = title;
        mbDiag.ShowModal();
    }
    function CloseDiag() {
        CloseComDiag();
        mbDiag.CloseModal();
        diag1.CloseModal();
        diag.CloseModal();
    }
    //多文件上传
    $(function () {
        ZL_Webup.config.json.ashx = "action=OAattach";
        $("#upfile_btn").click(ZL_Webup.ShowFileUP);
        if (!ZL_Regex.isEmpty($("#Attach_Hid").val())) {
            var files = $("#Attach_Hid").val().split('|');
            $("#Attach_Hid").val("");
            for (var i = 0; i < files.length; i++) {
                AddAttach(files[i], { _raw: files[i] }, {});
            }
        }
    })
    function AddAttach(file, ret, pval) { return ZL_Webup.AddAttach(file, ret, pval); }
    function WordBack(fname) { $("#PrivateAttach_Hid").val(fname); }
    $(function () {
        if ($("#@(Model.VCodeControlId)").length > 0) {
            $("#@(Model.VCodeControlId)").ValidateCode();
        }
        var mbup = { files: [], uploadCount: 0, $hid: $("#@(GetId("up_hid"))"), maxcount: parseInt("5") };
        mbup.uploadCountDom = document.createElement("div");
        mbup.uploaderFiles = $("#@GetId("up_files")");
        mbup.init = function () {
            // var data = [{ "url": "/UploadFiles/admin1/20161230/20161230aSBkCt.jpg", "desc": "" }, { "url": "/UploadFiles/admin1/20161230/20161230K6wslW.jpg", "desc": "" }];
            var data = [];
            if (mbup.$hid.val() == "") { }
            else { data = JSON.parse(mbup.$hid.val()); }
            for (var i = 0; i < data.length; i++) {
                data[i].url = mbup.getImgUrl(data[i].url);
            }
            for (var i = 0; i < data.length; i++) {
                var model = { id: i, name: "" + i, url: data[i].url, imgurl: data[i].url };
                mbup.files.push(model);
                var $item = $('<li class="weui-uploader__file" data-id="' + model.id + '" style="background-image: url(' + model.imgurl + ');"></li>');
                mbup.uploaderFiles.append($item);
            }
            mbup.uploadCount = data.length;
            mbup.uploadCountDom.innerHTML = mbup.uploadCount;
        }
        mbup.del = function (id) {
            for (var i = 0; i < mbup.files.length; i++) {
                if (mbup.files[i].id == id) { mbup.files.splice(i, 1); }
            }
            mbup.updateFileJson();
        }
        mbup.updateFileJson = function () {
            var list = [];
            var $hid = mbup.$hid;
            if (mbup.files.length < 1) { $hid.val(""); }
            for (var i = 0; i < mbup.files.length; i++) {
                var file = mbup.files[i];
                var model = { url: file.imgurl, desc: "" };
                list.push(model);
            }
            $hid.val(JSON.stringify(list));
            @MvcHtmlString.Create(Model.On_Change);
        }
        weui.uploader("#@GetId("up_form")", {
            url: '/IO/UploadFileHandler',
            auto: true,
            type: 'file',
            fileVal: 'file',
            compress: { width: 1600, height: 1600, quality: .8 },
            onBeforeQueued: function onBeforeQueued(files) {
                if (["image/jpg", "image/jpeg", "image/png", "image/gif"].indexOf(this.type) < 0) {
                    weui.alert('请上传图片');
                    return false;
                }
                if (this.size > 10 * 1024 * 1024) {
                    weui.alert('请上传不超过10M的图片');
                    return false;
                }
                if (files.length > mbup.maxcount) {
                    weui.alert('最多只能上传' + mbup.maxcount + '张图片，请重新选择');
                    return false;
                }
                if (mbup.uploadCount + 1 > mbup.maxcount) {
                    weui.alert('最多只能上传' + mbup.maxcount + '张图片');
                    return false;
                }

                ++mbup.uploadCount;
                mbup.uploadCountDom.innerHTML = mbup.uploadCount;
            },
            onSuccess: function onSuccess(ret) {
                this.imgurl = ret;
                mbup.files.push(this);
                console.log(mbup.files);
                mbup.updateFileJson();
            },
            onError: function onError(err) {
                console.log("failed", err);
            }
        });
        mbup.uploaderFiles[0].addEventListener('click', function (e) {
            var target = e.target;

            while (!target.classList.contains('weui-uploader__file') && target) {
                target = target.parentNode;
            }
            if (!target)

            var url = target.getAttribute('style') || '';
            if (url) {
                url = url.match(/url\((.*?)\)/)[1];
            }
            //上传完成后将图片转化为对象,并关联事件
            var gallery = weui.gallery(url, {
                className: 'custom-name',
                onDelete: function onDelete() {
                    weui.confirm('确定删除该图片？', function () {
                        --mbup.uploadCount;
                        mbup.uploadCountDom.innerHTML = mbup.uploadCount;
                        target.remove();
                        gallery.hide();
                        mbup.del($(target).data("id"));
                    });
                }
            });
        });
        mbup.getImgUrl = function (url) {
            if (!url) { return ""; }
            url = url.toLocaleLowerCase();
            var updir = "@(ZoomLa.Components.SiteConfig.SiteOption.UploadDir.ToLower())";
            if (url.indexOf("://") > 0)//不做处理
            {

            }
            else if (url.indexOf("uploadfiles/") != 0 && url.indexOf(updir) != 0) {
                url = updir + url;
            }
            return url;
        }
        //---------------------------------------------
        var emotion = {
            cfg: { $obj: $("#@GetId("emotion_div")") },
            choose: function () {
                var $obj = this.cfg.$obj;
                var flag = $obj.is(":visible");
                if ($("#@GetId("emotion_if")").attr("src") == "") {
                    $("#@GetId("emotion_if")").attr("src", "/Plugins/Ueditor/dialogs/emotion/ImgFace.html");
                }
                if (flag == false) { emotion.cfg.$obj.show(); }
                else { emotion.cfg.$obj.hide(); }
            },
            insert: function (json) {
                var arr = JSON.parse(mbeditor.$emotion.val()); arr.push(json);
                mbeditor.$emotion.val(JSON.stringify(arr));
                mbeditor.setContent(mbeditor.getContent() + json.title);
            },
            close: function () {
                this.cfg.$obj.hide();
            }
        };
        function InsertSmiley(json) {
            return emotion.insert(json);
        }
        var mbeditor = {
            $value: $("#@Model.ValueControlId"),
            $value2: $("#@(GetId("src"))"),
            boundary: "@Call.Boundary",
            $content: $("#@GetId("t")"),
            $emotion: $("#@GetId("emotion_hid")"),//已使用表情控件数据
            //--------------------------
            getContent: function () {
                return this.$content.val();
            },
            setContent: function (text) {
                this.$content.val(text);
                @MvcHtmlString.Create(Model.On_Change);
            },
            emotionsToHtml: function (content) {
                var ref = this;
                var emotionStr = ref.$emotion.val();
                if (!emotionStr || emotionStr == "[]") { return content; }
                //-----------------------
                var dt = JSON.parse(emotionStr);
                for (var i = 0; i < dt.length; i++) {
                    var flag = dt[i].title;
                    var imgTlp = "<img src='/Plugins/Ueditor/dialogs/emotion/" + dt[i].realurl + "' class='imgface_img' />";
                    while (content.indexOf(flag) > -1) {
                        content = content.replace(flag, imgTlp);
                    }
                }
                return content;
            },
            imagesToHtml: function (content) {
                try {
                    var ref = this;
                    var fileup = $("#Attach_Hid ").val()
                    var idArry = fileup.split('|');
                    fileup = "[";
                    for (var i = 0; i < idArry.length; i++) {
                        if (idArry[i] != "") {
                            fileup += '{"url":"' + idArry[i] + '","desc":""}';
                            if (idArry[i + 1] != "") {
                                fileup += ",";
                            }
                            else {
                                fileup += "]";
                            }
                        }

                    }
                    var imgStr = fileup;
                    //alert(mbup.$hid.val());
                    if (!imgStr || imgStr == "[]") { return content; }
                    //-----------------------
                    var dt = JSON.parse(imgStr);
                    var imgHtml = "";
                    for (var i = 0; i < dt.length; i++) {
                        if (IsImage(dt[i].url)) {
                            var imgTlp = "<img src='" + dt[i].url + "' class='mb_img'>";
                        }
                        else {
                            let idArry = dt[i].url.split(".");
                            let idArry_1 = idArry[0].split("/");
                            var imgTlp = '<div class="imgview" onclick="ShowMBDiag(\'../../PreView?vpath=' + dt[i].url + '\',\'文件预览\');">';

                            imgTlp += "<div class='ext " + idArry[1] + "'></div><div class='fname'>" + idArry_1[idArry_1.length - 1].substr(0, 6) + "..</div></div>";
                        }
                        imgHtml += imgTlp;
                    }
                } catch (e) {
                    var imgHtml = "";
                }
                
                return (content + "<div>" + imgHtml + "</div>");
            },
            //将文本字符串格式化
            formatToHtml: function (content) {
                content = content.replace(/\r\n/g, "<br />");
                return content;
            },
            //--------------
            init: function () {
                var ref = this;
                if (ref.$value2.val() != "") {
                    var valueArr = ref.$value2.val().split(ref.boundary);
                    ref.$content.val(valueArr[0]);
                    mbup.$hid.val(valueArr[1]);
                    ref.$emotion.val(valueArr[2]);
                }
                $("#@GetId("t")").change(function () {
                    @MvcHtmlString.Create(Model.On_Change);
                });
                document.getElementById("@GetId("submit")").onclick = mbeditor.subCheck;
                mbup.init();
            },
            //根据当前用户输入,更新控件中所保存的值
            updateValue: function () {
                var ref = this;
                var content = ref.getContent(), content2 = "";
                content = ref.emotionsToHtml(content);
                content = ref.imagesToHtml(content);
                content = ref.formatToHtml(content);
                //用于展示的字段
                ref.$value.val(content);
                //文本|图片|表情(单独字段存储,用于修改时)
                content2 = ref.$content.val() + ref.boundary + mbup.$hid.val() + ref.boundary + ref.$emotion.val();
                ref.$value2.val(content2);
            },
            subCheck: function () {
                var ref = mbeditor;
                var content = ref.getContent();
                if (content == "") { weui.alert("内容不能为空"); return false; }
                if ($("#@(Model.VCodeControlId)").length > 0 && $("#@(Model.VCodeControlId)").val().length < 4) { weui.alert("验证码不正确"); return false; }
                ref.updateValue();
                //--------------------callback begin
                @MvcHtmlString.Create(Model.On_Submit)
                //--------------------callback end
                return true;
            }
        };
        mbeditor.init();
    })
</script>